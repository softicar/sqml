/*
 * generated by Xtext
 */
grammar InternalSqml;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.softicar.sqml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.softicar.sqml.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.softicar.sqml.services.SqmlGrammarAccess;

}

@parser::members {

 	private SqmlGrammarAccess grammarAccess;
 	
    public InternalSqmlParser(TokenStream input, SqmlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SqmlFile";	
   	}
   	
   	@Override
   	protected SqmlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSqmlFile
entryRuleSqmlFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFileRule()); }
	 iv_ruleSqmlFile=ruleSqmlFile 
	 { $current=$iv_ruleSqmlFile.current; } 
	 EOF 
;

// Rule SqmlFile
ruleSqmlFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFileAccess().getPackageDeclarationSqmlPackageDeclarationParserRuleCall_0_0()); 
	    }
		lv_packageDeclaration_0_0=ruleSqmlPackageDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFileRule());
	        }
       		set(
       			$current, 
       			"packageDeclaration",
        		lv_packageDeclaration_0_0, 
        		"com.softicar.sqml.Sqml.SqmlPackageDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFileAccess().getImportsSqmlImportParserRuleCall_1_0()); 
	    }
		lv_imports_1_0=ruleSqmlImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFileRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_1_0, 
        		"com.softicar.sqml.Sqml.SqmlImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFileAccess().getElementsSqmlFileElementParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleSqmlFileElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFileRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"com.softicar.sqml.Sqml.SqmlFileElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSqmlPackageDeclaration
entryRuleSqmlPackageDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlPackageDeclarationRule()); }
	 iv_ruleSqmlPackageDeclaration=ruleSqmlPackageDeclaration 
	 { $current=$iv_ruleSqmlPackageDeclaration.current; } 
	 EOF 
;

// Rule SqmlPackageDeclaration
ruleSqmlPackageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PACKAGE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlPackageDeclarationAccess().getPACKAGEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlPackageDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"com.softicar.sqml.Sqml.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlImport
entryRuleSqmlImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlImportRule()); }
	 iv_ruleSqmlImport=ruleSqmlImport 
	 { $current=$iv_ruleSqmlImport.current; } 
	 EOF 
;

// Rule SqmlImport
ruleSqmlImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IMPORT' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlImportAccess().getIMPORTKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlImportRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSqmlImportAccess().getTargetISqmlGlobalObjectCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlFileElement
entryRuleSqmlFileElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFileElementRule()); }
	 iv_ruleSqmlFileElement=ruleSqmlFileElement 
	 { $current=$iv_ruleSqmlFileElement.current; } 
	 EOF 
;

// Rule SqmlFileElement
ruleSqmlFileElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlFileElementAccess().getSqmlValueTypeParserRuleCall_0()); 
    }
    this_SqmlValueType_0=ruleSqmlValueType
    { 
        $current = $this_SqmlValueType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlFileElementAccess().getSqmlTableParserRuleCall_1()); 
    }
    this_SqmlTable_1=ruleSqmlTable
    { 
        $current = $this_SqmlTable_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlFileElementAccess().getSqmlQueryParserRuleCall_2()); 
    }
    this_SqmlQuery_2=ruleSqmlQuery
    { 
        $current = $this_SqmlQuery_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlFileElementAccess().getSqmlFunctionParserRuleCall_3()); 
    }
    this_SqmlFunction_3=ruleSqmlFunction
    { 
        $current = $this_SqmlFunction_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlTypeReference
entryRuleSqmlTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTypeReferenceRule()); }
	 iv_ruleSqmlTypeReference=ruleSqmlTypeReference 
	 { $current=$iv_ruleSqmlTypeReference.current; } 
	 EOF 
;

// Rule SqmlTypeReference
ruleSqmlTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSqmlTypeReferenceAccess().getTypeDefinitionISqmlTypeDefinitionCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTypeReferenceAccess().getTypeParametersSqmlTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_typeParameters_2_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_2_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTypeReferenceAccess().getTypeParametersSqmlTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_typeParameters_4_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"typeParameters",
        		lv_typeParameters_4_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?((
(
		lv_list_6_0=	'[' 
    {
        newLeafNode(lv_list_6_0, grammarAccess.getSqmlTypeReferenceAccess().getListLeftSquareBracketKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTypeReferenceRule());
	        }
       		setWithLastConsumed($current, "list", true, "[");
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSqmlTypeReferenceAccess().getRightSquareBracketKeyword_2_1());
    }
)?)
;





// Entry rule entryRuleSqmlValueType
entryRuleSqmlValueType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlValueTypeRule()); }
	 iv_ruleSqmlValueType=ruleSqmlValueType 
	 { $current=$iv_ruleSqmlValueType.current; } 
	 EOF 
;

// Rule SqmlValueType
ruleSqmlValueType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VALUETYPE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlValueTypeAccess().getVALUETYPEKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSqmlValueTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlValueTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlValueTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlValueTypeAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSqmlEnum
entryRuleSqmlEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlEnumRule()); }
	 iv_ruleSqmlEnum=ruleSqmlEnum 
	 { $current=$iv_ruleSqmlEnum.current; } 
	 EOF 
;

// Rule SqmlEnum
ruleSqmlEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ENUM' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlEnumAccess().getENUMKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSqmlEnumAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlEnumRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2='ON' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlEnumAccess().getONKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlEnumAccess().getTypeReferenceSqmlTypeReferenceParserRuleCall_2_1_0()); 
	    }
		lv_typeReference_3_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlEnumRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_3_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSqmlEnumAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlEnumAccess().getEnumeratorsSqmlEnumeratorParserRuleCall_4_0()); 
	    }
		lv_enumerators_5_0=ruleSqmlEnumerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlEnumRule());
	        }
       		add(
       			$current, 
       			"enumerators",
        		lv_enumerators_5_0, 
        		"com.softicar.sqml.Sqml.SqmlEnumerator");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSqmlEnumAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSqmlEnumerator
entryRuleSqmlEnumerator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlEnumeratorRule()); }
	 iv_ruleSqmlEnumerator=ruleSqmlEnumerator 
	 { $current=$iv_ruleSqmlEnumerator.current; } 
	 EOF 
;

// Rule SqmlEnumerator
ruleSqmlEnumerator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSqmlEnumeratorAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlEnumeratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlEnumeratorAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlEnumeratorAccess().getValueSqmlLiteralParserRuleCall_1_1_0()); 
	    }
		lv_value_2_0=ruleSqmlLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlEnumeratorRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"com.softicar.sqml.Sqml.SqmlLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSqmlTable
entryRuleSqmlTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTableRule()); }
	 iv_ruleSqmlTable=ruleSqmlTable 
	 { $current=$iv_ruleSqmlTable.current; } 
	 EOF 
;

// Rule SqmlTable
ruleSqmlTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_enumTable_0_0=	'ENUM' 
    {
        newLeafNode(lv_enumTable_0_0, grammarAccess.getSqmlTableAccess().getEnumTableENUMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableRule());
	        }
       		setWithLastConsumed($current, "enumTable", true, "ENUM");
	    }

)
)?	otherlv_1='TABLE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlTableAccess().getTABLEKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSqmlTableAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		lv_physicalNameOverride_3_0=RULE_STRING
		{
			newLeafNode(lv_physicalNameOverride_3_0, grammarAccess.getSqmlTableAccess().getPhysicalNameOverrideSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"physicalNameOverride",
        		lv_physicalNameOverride_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSqmlTableAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableAccess().getColumnsSqmlTableColumnParserRuleCall_5_0()); 
	    }
		lv_columns_5_0=ruleSqmlTableColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_5_0, 
        		"com.softicar.sqml.Sqml.SqmlTableColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableAccess().getTableKeysSqmlTableKeyParserRuleCall_6_0()); 
	    }
		lv_tableKeys_6_0=ruleSqmlTableKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRule());
	        }
       		add(
       			$current, 
       			"tableKeys",
        		lv_tableKeys_6_0, 
        		"com.softicar.sqml.Sqml.SqmlTableKey");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableAccess().getEnumsSqmlEnumParserRuleCall_7_0()); 
	    }
		lv_enums_7_0=ruleSqmlEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRule());
	        }
       		add(
       			$current, 
       			"enums",
        		lv_enums_7_0, 
        		"com.softicar.sqml.Sqml.SqmlEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableAccess().getRowsSqmlTableRowParserRuleCall_8_0()); 
	    }
		lv_rows_8_0=ruleSqmlTableRow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRule());
	        }
       		add(
       			$current, 
       			"rows",
        		lv_rows_8_0, 
        		"com.softicar.sqml.Sqml.SqmlTableRow");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSqmlTableAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleSqmlTableColumn
entryRuleSqmlTableColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTableColumnRule()); }
	 iv_ruleSqmlTableColumn=ruleSqmlTableColumn 
	 { $current=$iv_ruleSqmlTableColumn.current; } 
	 EOF 
;

// Rule SqmlTableColumn
ruleSqmlTableColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_primaryKey_0_0=	'PK' 
    {
        newLeafNode(lv_primaryKey_0_0, grammarAccess.getSqmlTableColumnAccess().getPrimaryKeyPKKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "primaryKey", true, "PK");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableColumnAccess().getTypeReferenceSqmlTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableColumnRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSqmlTableColumnAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableColumnAccess().getDefaultValueSqmlDefaultValueParserRuleCall_3_1_0_0()); 
	    }
		lv_defaultValue_4_0=ruleSqmlDefaultValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableColumnRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_4_0, 
        		"com.softicar.sqml.Sqml.SqmlDefaultValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_defaultNull_5_0=	'NULL' 
    {
        newLeafNode(lv_defaultNull_5_0, grammarAccess.getSqmlTableColumnAccess().getDefaultNullNULLKeyword_3_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "defaultNull", true, "NULL");
	    }

)
)
    |(
(
		lv_defaultNow_6_0=	'NOW' 
    {
        newLeafNode(lv_defaultNow_6_0, grammarAccess.getSqmlTableColumnAccess().getDefaultNowNOWKeyword_3_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "defaultNow", true, "NOW");
	    }

)
)
    |(
(
		lv_serial_7_0=	'SERIAL' 
    {
        newLeafNode(lv_serial_7_0, grammarAccess.getSqmlTableColumnAccess().getSerialSERIALKeyword_3_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "serial", true, "SERIAL");
	    }

)
)
    |(
(
		lv_baseColumn_8_0=	'BASE' 
    {
        newLeafNode(lv_baseColumn_8_0, grammarAccess.getSqmlTableColumnAccess().getBaseColumnBASEKeyword_3_1_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "baseColumn", true, "BASE");
	    }

)
)))?(	otherlv_9='[' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSqmlTableColumnAccess().getLeftSquareBracketKeyword_4_0());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 0);
	 				}
					({true}?=>(
(
		lv_nullable_11_0=	'NULLABLE' 
    {
        newLeafNode(lv_nullable_11_0, grammarAccess.getSqmlTableColumnAccess().getNullableNULLABLEKeyword_4_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "nullable", true, "NULLABLE");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 1);
	 				}
					({true}?=>(
(
		lv_timestamp_12_0=	'TIMESTAMP' 
    {
        newLeafNode(lv_timestamp_12_0, grammarAccess.getSqmlTableColumnAccess().getTimestampTIMESTAMPKeyword_4_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "timestamp", true, "TIMESTAMP");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 2);
	 				}
					({true}?=>(
(
		lv_unsigned_13_0=	'UNSIGNED' 
    {
        newLeafNode(lv_unsigned_13_0, grammarAccess.getSqmlTableColumnAccess().getUnsignedUNSIGNEDKeyword_4_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "unsigned", true, "UNSIGNED");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 3);
	 				}
					({true}?=>(	otherlv_14='ON' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSqmlTableColumnAccess().getONKeyword_4_1_3_0());
    }
	otherlv_15='DELETE' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSqmlTableColumnAccess().getDELETEKeyword_4_1_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableColumnAccess().getOnDeleteActionSqmlForeignKeyActionEnumRuleCall_4_1_3_2_0()); 
	    }
		lv_onDeleteAction_16_0=ruleSqmlForeignKeyAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableColumnRule());
	        }
       		set(
       			$current, 
       			"onDeleteAction",
        		lv_onDeleteAction_16_0, 
        		"com.softicar.sqml.Sqml.SqmlForeignKeyAction");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 4);
	 				}
					({true}?=>(	otherlv_17='ON' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSqmlTableColumnAccess().getONKeyword_4_1_4_0());
    }
	otherlv_18='UPDATE' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSqmlTableColumnAccess().getUPDATEKeyword_4_1_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableColumnAccess().getOnUpdateActionSqmlForeignKeyActionEnumRuleCall_4_1_4_2_0()); 
	    }
		lv_onUpdateAction_19_0=ruleSqmlForeignKeyAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableColumnRule());
	        }
       		set(
       			$current, 
       			"onUpdateAction",
        		lv_onUpdateAction_19_0, 
        		"com.softicar.sqml.Sqml.SqmlForeignKeyAction");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 5);
	 				}
					({true}?=>(	otherlv_20='ON' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSqmlTableColumnAccess().getONKeyword_4_1_5_0());
    }
	otherlv_21='UPDATE' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSqmlTableColumnAccess().getUPDATEKeyword_4_1_5_1());
    }
(
(
		lv_onUpdateNow_22_0=	'NOW' 
    {
        newLeafNode(lv_onUpdateNow_22_0, grammarAccess.getSqmlTableColumnAccess().getOnUpdateNowNOWKeyword_4_1_5_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed($current, "onUpdateNow", true, "NOW");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 6);
	 				}
					({true}?=>(
(
		lv_physicalNameOverride_23_0=RULE_STRING
		{
			newLeafNode(lv_physicalNameOverride_23_0, grammarAccess.getSqmlTableColumnAccess().getPhysicalNameOverrideSTRINGTerminalRuleCall_4_1_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"physicalNameOverride",
        		lv_physicalNameOverride_23_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 7);
	 				}
					({true}?=>(	otherlv_24='BITS' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSqmlTableColumnAccess().getBITSKeyword_4_1_7_0());
    }
	otherlv_25='=' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_7_1());
    }
(
(
		lv_bits_26_0=RULE_INT
		{
			newLeafNode(lv_bits_26_0, grammarAccess.getSqmlTableColumnAccess().getBitsINTTerminalRuleCall_4_1_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bits",
        		lv_bits_26_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 8);
	 				}
					({true}?=>(	otherlv_27='PRECISION' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSqmlTableColumnAccess().getPRECISIONKeyword_4_1_8_0());
    }
	otherlv_28='=' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_8_1());
    }
(
(
		lv_precision_29_0=RULE_INT
		{
			newLeafNode(lv_precision_29_0, grammarAccess.getSqmlTableColumnAccess().getPrecisionINTTerminalRuleCall_4_1_8_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"precision",
        		lv_precision_29_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_30=',' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getSqmlTableColumnAccess().getCommaKeyword_4_1_8_3());
    }
(
(
		lv_scale_31_0=RULE_INT
		{
			newLeafNode(lv_scale_31_0, grammarAccess.getSqmlTableColumnAccess().getScaleINTTerminalRuleCall_4_1_8_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scale",
        		lv_scale_31_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 9);
	 				}
					({true}?=>(	otherlv_32='MAXLENGTH' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getSqmlTableColumnAccess().getMAXLENGTHKeyword_4_1_9_0());
    }
	otherlv_33='=' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_9_1());
    }
(
(
		lv_maxLength_34_0=RULE_INT
		{
			newLeafNode(lv_maxLength_34_0, grammarAccess.getSqmlTableColumnAccess().getMaxLengthINTTerminalRuleCall_4_1_9_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"maxLength",
        		lv_maxLength_34_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 10);
	 				}
					({true}?=>(	otherlv_35='LENGTHBITS' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getSqmlTableColumnAccess().getLENGTHBITSKeyword_4_1_10_0());
    }
	otherlv_36='=' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_10_1());
    }
(
(
		lv_lengthBits_37_0=RULE_INT
		{
			newLeafNode(lv_lengthBits_37_0, grammarAccess.getSqmlTableColumnAccess().getLengthBitsINTTerminalRuleCall_4_1_10_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lengthBits",
        		lv_lengthBits_37_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 11);
	 				}
					({true}?=>(	otherlv_38='CHARACTER' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getSqmlTableColumnAccess().getCHARACTERKeyword_4_1_11_0());
    }
	otherlv_39='SET' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getSqmlTableColumnAccess().getSETKeyword_4_1_11_1());
    }
	otherlv_40='=' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_11_2());
    }
(
(
		lv_characterSet_41_0=RULE_STRING
		{
			newLeafNode(lv_characterSet_41_0, grammarAccess.getSqmlTableColumnAccess().getCharacterSetSTRINGTerminalRuleCall_4_1_11_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"characterSet",
        		lv_characterSet_41_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 12)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 12);
	 				}
					({true}?=>(	otherlv_42='COLLATION' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getSqmlTableColumnAccess().getCOLLATIONKeyword_4_1_12_0());
    }
	otherlv_43='=' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_12_1());
    }
(
(
		lv_collation_44_0=RULE_STRING
		{
			newLeafNode(lv_collation_44_0, grammarAccess.getSqmlTableColumnAccess().getCollationSTRINGTerminalRuleCall_4_1_12_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"collation",
        		lv_collation_44_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 13)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 13);
	 				}
					({true}?=>(	otherlv_45='COMMENT' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getSqmlTableColumnAccess().getCOMMENTKeyword_4_1_13_0());
    }
	otherlv_46='=' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_13_1());
    }
(
(
		lv_comment_47_0=RULE_STRING
		{
			newLeafNode(lv_comment_47_0, grammarAccess.getSqmlTableColumnAccess().getCommentSTRINGTerminalRuleCall_4_1_13_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_47_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 14)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1(), 14);
	 				}
					({true}?=>(	otherlv_48='CONSTRAINT_NAME' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getSqmlTableColumnAccess().getCONSTRAINT_NAMEKeyword_4_1_14_0());
    }
	otherlv_49='=' 
    {
    	newLeafNode(otherlv_49, grammarAccess.getSqmlTableColumnAccess().getEqualsSignKeyword_4_1_14_1());
    }
(
(
		lv_constraintName_50_0=RULE_STRING
		{
			newLeafNode(lv_constraintName_50_0, grammarAccess.getSqmlTableColumnAccess().getConstraintNameSTRINGTerminalRuleCall_4_1_14_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"constraintName",
        		lv_constraintName_50_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSqmlTableColumnAccess().getUnorderedGroup_4_1());
	}

)	otherlv_51=']' 
    {
    	newLeafNode(otherlv_51, grammarAccess.getSqmlTableColumnAccess().getRightSquareBracketKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleSqmlTableRow
entryRuleSqmlTableRow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTableRowRule()); }
	 iv_ruleSqmlTableRow=ruleSqmlTableRow 
	 { $current=$iv_ruleSqmlTableRow.current; } 
	 EOF 
;

// Rule SqmlTableRow
ruleSqmlTableRow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ROW' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlTableRowAccess().getROWKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlTableRowAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableRowAccess().getValuesSqmlTableRowValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleSqmlTableRowValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRowRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"com.softicar.sqml.Sqml.SqmlTableRowValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlTableRowAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableRowAccess().getValuesSqmlTableRowValueParserRuleCall_3_1_0()); 
	    }
		lv_values_4_0=ruleSqmlTableRowValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRowRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"com.softicar.sqml.Sqml.SqmlTableRowValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlTableRowAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSqmlTableRowValue
entryRuleSqmlTableRowValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTableRowValueRule()); }
	 iv_ruleSqmlTableRowValue=ruleSqmlTableRowValue 
	 { $current=$iv_ruleSqmlTableRowValue.current; } 
	 EOF 
;

// Rule SqmlTableRowValue
ruleSqmlTableRowValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlTableRowValueAccess().getLiteralSqmlLiteralParserRuleCall_0_0()); 
	    }
		lv_literal_0_0=ruleSqmlLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlTableRowValueRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"com.softicar.sqml.Sqml.SqmlLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_null_1_0=	'NULL' 
    {
        newLeafNode(lv_null_1_0, grammarAccess.getSqmlTableRowValueAccess().getNullNULLKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableRowValueRule());
	        }
       		setWithLastConsumed($current, "null", true, "NULL");
	    }

)
))
;





// Entry rule entryRuleSqmlDefaultValue
entryRuleSqmlDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlDefaultValueRule()); }
	 iv_ruleSqmlDefaultValue=ruleSqmlDefaultValue 
	 { $current=$iv_ruleSqmlDefaultValue.current; } 
	 EOF 
;

// Rule SqmlDefaultValue
ruleSqmlDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlDefaultValueAccess().getSqmlRowConstructorDefaultValueParserRuleCall_0()); 
    }
    this_SqmlRowConstructorDefaultValue_0=ruleSqmlRowConstructorDefaultValue
    { 
        $current = $this_SqmlRowConstructorDefaultValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlDefaultValueAccess().getSqmlLiteralDefaultValueParserRuleCall_1()); 
    }
    this_SqmlLiteralDefaultValue_1=ruleSqmlLiteralDefaultValue
    { 
        $current = $this_SqmlLiteralDefaultValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlDefaultValueAccess().getSqmlValueReferenceDefaultValueParserRuleCall_2()); 
    }
    this_SqmlValueReferenceDefaultValue_2=ruleSqmlValueReferenceDefaultValue
    { 
        $current = $this_SqmlValueReferenceDefaultValue_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlRowConstructorDefaultValue
entryRuleSqmlRowConstructorDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlRowConstructorDefaultValueRule()); }
	 iv_ruleSqmlRowConstructorDefaultValue=ruleSqmlRowConstructorDefaultValue 
	 { $current=$iv_ruleSqmlRowConstructorDefaultValue.current; } 
	 EOF 
;

// Rule SqmlRowConstructorDefaultValue
ruleSqmlRowConstructorDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlRowConstructorDefaultValueAccess().getSqmlRowConstructorDefaultValueAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlRowConstructorDefaultValueAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlRowConstructorDefaultValueAccess().getValueReferencesSqmlValueReferenceParserRuleCall_2_0_0()); 
	    }
		lv_valueReferences_2_0=ruleSqmlValueReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlRowConstructorDefaultValueRule());
	        }
       		add(
       			$current, 
       			"valueReferences",
        		lv_valueReferences_2_0, 
        		"com.softicar.sqml.Sqml.SqmlValueReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlRowConstructorDefaultValueAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlRowConstructorDefaultValueAccess().getValueReferencesSqmlValueReferenceParserRuleCall_2_1_1_0()); 
	    }
		lv_valueReferences_4_0=ruleSqmlValueReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlRowConstructorDefaultValueRule());
	        }
       		add(
       			$current, 
       			"valueReferences",
        		lv_valueReferences_4_0, 
        		"com.softicar.sqml.Sqml.SqmlValueReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlRowConstructorDefaultValueAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleSqmlLiteralDefaultValue
entryRuleSqmlLiteralDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlLiteralDefaultValueRule()); }
	 iv_ruleSqmlLiteralDefaultValue=ruleSqmlLiteralDefaultValue 
	 { $current=$iv_ruleSqmlLiteralDefaultValue.current; } 
	 EOF 
;

// Rule SqmlLiteralDefaultValue
ruleSqmlLiteralDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_minus_0_0=	'-' 
    {
        newLeafNode(lv_minus_0_0, grammarAccess.getSqmlLiteralDefaultValueAccess().getMinusHyphenMinusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlLiteralDefaultValueRule());
	        }
       		setWithLastConsumed($current, "minus", true, "-");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlLiteralDefaultValueAccess().getLiteralSqmlLiteralParserRuleCall_1_0()); 
	    }
		lv_literal_1_0=ruleSqmlLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlLiteralDefaultValueRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_1_0, 
        		"com.softicar.sqml.Sqml.SqmlLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlValueReferenceDefaultValue
entryRuleSqmlValueReferenceDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlValueReferenceDefaultValueRule()); }
	 iv_ruleSqmlValueReferenceDefaultValue=ruleSqmlValueReferenceDefaultValue 
	 { $current=$iv_ruleSqmlValueReferenceDefaultValue.current; } 
	 EOF 
;

// Rule SqmlValueReferenceDefaultValue
ruleSqmlValueReferenceDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlValueReferenceDefaultValueAccess().getValueReferenceSqmlValueReferenceParserRuleCall_0()); 
	    }
		lv_valueReference_0_0=ruleSqmlValueReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlValueReferenceDefaultValueRule());
	        }
       		set(
       			$current, 
       			"valueReference",
        		lv_valueReference_0_0, 
        		"com.softicar.sqml.Sqml.SqmlValueReference");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSqmlTableKey
entryRuleSqmlTableKey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTableKeyRule()); }
	 iv_ruleSqmlTableKey=ruleSqmlTableKey 
	 { $current=$iv_ruleSqmlTableKey.current; } 
	 EOF 
;

// Rule SqmlTableKey
ruleSqmlTableKey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='UK' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlTableKeyAccess().getUKKeyword_0_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlTableKeyAccess().getSqmlUniqueKeyAction_0_0_1(),
            $current);
    }
))
    |(	otherlv_2='IK' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlTableKeyAccess().getIKKeyword_0_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlTableKeyAccess().getSqmlIndexKeyAction_0_1_1(),
            $current);
    }
)))(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableKeyRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getSqmlTableKeyAccess().getColumnsISqmlTableColumnCrossReference_1_0()); 
	}

)
)*(	otherlv_5='AS' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlTableKeyAccess().getASKeyword_2_0());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getSqmlTableKeyAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableKeyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))?)
;





// Entry rule entryRuleSqmlQuery
entryRuleSqmlQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlQueryRule()); }
	 iv_ruleSqmlQuery=ruleSqmlQuery 
	 { $current=$iv_ruleSqmlQuery.current; } 
	 EOF 
;

// Rule SqmlQuery
ruleSqmlQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='QUERY' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlQueryAccess().getQUERYKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSqmlQueryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlQueryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlQueryAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlQueryAccess().getParametersSqmlQueryParameterParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleSqmlQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlQueryRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"com.softicar.sqml.Sqml.SqmlQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlQueryAccess().getSelectSqmlSelectParserRuleCall_4_0()); 
	    }
		lv_select_4_0=ruleSqmlSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlQueryRule());
	        }
       		set(
       			$current, 
       			"select",
        		lv_select_4_0, 
        		"com.softicar.sqml.Sqml.SqmlSelect");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlQueryAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSqmlQueryParameter
entryRuleSqmlQueryParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlQueryParameterRule()); }
	 iv_ruleSqmlQueryParameter=ruleSqmlQueryParameter 
	 { $current=$iv_ruleSqmlQueryParameter.current; } 
	 EOF 
;

// Rule SqmlQueryParameter
ruleSqmlQueryParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_optional_0_0=	'OPTIONAL' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getSqmlQueryParameterAccess().getOptionalOPTIONALKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlQueryParameterRule());
	        }
       		setWithLastConsumed($current, "optional", true, "OPTIONAL");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlQueryParameterAccess().getTypeReferenceSqmlTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlQueryParameterRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSqmlQueryParameterAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlQueryParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleSqmlFunction
entryRuleSqmlFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFunctionRule()); }
	 iv_ruleSqmlFunction=ruleSqmlFunction 
	 { $current=$iv_ruleSqmlFunction.current; } 
	 EOF 
;

// Rule SqmlFunction
ruleSqmlFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FUNCTION' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlFunctionAccess().getFUNCTIONKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionAccess().getReturnTypeSqmlTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_returnType_1_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_1_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionAccess().getNameSqmlFunctionNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleSqmlFunctionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"com.softicar.sqml.Sqml.SqmlFunctionName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlFunctionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionAccess().getParametersSqmlFunctionParameterParserRuleCall_4_0_0()); 
	    }
		lv_parameters_4_0=ruleSqmlFunctionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"com.softicar.sqml.Sqml.SqmlFunctionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlFunctionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionAccess().getParametersSqmlFunctionParameterParserRuleCall_4_1_1_0()); 
	    }
		lv_parameters_6_0=ruleSqmlFunctionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_6_0, 
        		"com.softicar.sqml.Sqml.SqmlFunctionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSqmlFunctionAccess().getRightParenthesisKeyword_5());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSqmlFunctionAccess().getLeftCurlyBracketKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionAccess().getExpressionSqmlExpressionParserRuleCall_7_0_0()); 
	    }
		lv_expression_9_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_9_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_10='SQL' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSqmlFunctionAccess().getSQLKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionAccess().getSqlSqmlSqlParserRuleCall_7_1_1_0()); 
	    }
		lv_sql_11_0=ruleSqmlSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionRule());
	        }
       		set(
       			$current, 
       			"sql",
        		lv_sql_11_0, 
        		"com.softicar.sqml.Sqml.SqmlSql");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSqmlFunctionAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleSqmlFunctionParameter
entryRuleSqmlFunctionParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFunctionParameterRule()); }
	 iv_ruleSqmlFunctionParameter=ruleSqmlFunctionParameter 
	 { $current=$iv_ruleSqmlFunctionParameter.current; } 
	 EOF 
;

// Rule SqmlFunctionParameter
ruleSqmlFunctionParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionParameterAccess().getTypeReferenceSqmlTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_typeReference_0_0=ruleSqmlTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionParameterRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_0_0, 
        		"com.softicar.sqml.Sqml.SqmlTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSqmlFunctionParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlFunctionParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleSqmlSql
entryRuleSqmlSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlRule()); }
	 iv_ruleSqmlSql=ruleSqmlSql 
	 { $current=$iv_ruleSqmlSql.current; } 
	 EOF 
;

// Rule SqmlSql
ruleSqmlSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlSqlAccess().getSqmlSqlAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlSqlAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSqlAccess().getTokensSqmlSqlTokenParserRuleCall_2_0()); 
	    }
		lv_tokens_2_0=ruleSqmlSqlToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSqlRule());
	        }
       		add(
       			$current, 
       			"tokens",
        		lv_tokens_2_0, 
        		"com.softicar.sqml.Sqml.SqmlSqlToken");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlSqlAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSqmlSqlToken
entryRuleSqmlSqlToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlTokenRule()); }
	 iv_ruleSqmlSqlToken=ruleSqmlSqlToken 
	 { $current=$iv_ruleSqmlSqlToken.current; } 
	 EOF 
;

// Rule SqmlSqlToken
ruleSqmlSqlToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	ruleSqmlStaticVariableReference)=>
    { 
        newCompositeNode(grammarAccess.getSqmlSqlTokenAccess().getSqmlStaticVariableReferenceParserRuleCall_0()); 
    }
    this_SqmlStaticVariableReference_0=ruleSqmlStaticVariableReference
    { 
        $current = $this_SqmlStaticVariableReference_0.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getSqmlSqlTokenAccess().getSqmlSqlKeywordParserRuleCall_1()); 
    }
    this_SqmlSqlKeyword_1=ruleSqmlSqlKeyword
    { 
        $current = $this_SqmlSqlKeyword_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSqlTokenAccess().getSqmlSqlIdParserRuleCall_2()); 
    }
    this_SqmlSqlId_2=ruleSqmlSqlId
    { 
        $current = $this_SqmlSqlId_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSqlTokenAccess().getSqmlSqlNumberLiteralParserRuleCall_3()); 
    }
    this_SqmlSqlNumberLiteral_3=ruleSqmlSqlNumberLiteral
    { 
        $current = $this_SqmlSqlNumberLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSqlTokenAccess().getSqmlSqlStringLiteralParserRuleCall_4()); 
    }
    this_SqmlSqlStringLiteral_4=ruleSqmlSqlStringLiteral
    { 
        $current = $this_SqmlSqlStringLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSqlTokenAccess().getSqmlSqlSymbolParserRuleCall_5()); 
    }
    this_SqmlSqlSymbol_5=ruleSqmlSqlSymbol
    { 
        $current = $this_SqmlSqlSymbol_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlSqlKeyword
entryRuleSqmlSqlKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlKeywordRule()); }
	 iv_ruleSqmlSqlKeyword=ruleSqmlSqlKeyword 
	 { $current=$iv_ruleSqmlSqlKeyword.current; } 
	 EOF 
;

// Rule SqmlSqlKeyword
ruleSqmlSqlKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_keywordText_0_1=	'ACTION' 
    {
        newLeafNode(lv_keywordText_0_1, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextACTIONKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_1, null);
	    }

    |		lv_keywordText_0_2=	'AND' 
    {
        newLeafNode(lv_keywordText_0_2, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextANDKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_2, null);
	    }

    |		lv_keywordText_0_3=	'AS' 
    {
        newLeafNode(lv_keywordText_0_3, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextASKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_3, null);
	    }

    |		lv_keywordText_0_4=	'ASC' 
    {
        newLeafNode(lv_keywordText_0_4, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextASCKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_4, null);
	    }

    |		lv_keywordText_0_5=	'BASE' 
    {
        newLeafNode(lv_keywordText_0_5, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextBASEKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_5, null);
	    }

    |		lv_keywordText_0_6=	'BETWEEN' 
    {
        newLeafNode(lv_keywordText_0_6, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextBETWEENKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_6, null);
	    }

    |		lv_keywordText_0_7=	'BITS' 
    {
        newLeafNode(lv_keywordText_0_7, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextBITSKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_7, null);
	    }

    |		lv_keywordText_0_8=	'BY' 
    {
        newLeafNode(lv_keywordText_0_8, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextBYKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_8, null);
	    }

    |		lv_keywordText_0_9=	'CASCADE' 
    {
        newLeafNode(lv_keywordText_0_9, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextCASCADEKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_9, null);
	    }

    |		lv_keywordText_0_10=	'CASE' 
    {
        newLeafNode(lv_keywordText_0_10, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextCASEKeyword_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_10, null);
	    }

    |		lv_keywordText_0_11=	'CHARACTER' 
    {
        newLeafNode(lv_keywordText_0_11, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextCHARACTERKeyword_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_11, null);
	    }

    |		lv_keywordText_0_12=	'COLLATION' 
    {
        newLeafNode(lv_keywordText_0_12, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextCOLLATIONKeyword_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_12, null);
	    }

    |		lv_keywordText_0_13=	'COMMENT' 
    {
        newLeafNode(lv_keywordText_0_13, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextCOMMENTKeyword_0_12());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_13, null);
	    }

    |		lv_keywordText_0_14=	'CONSTRAINT_NAME' 
    {
        newLeafNode(lv_keywordText_0_14, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextCONSTRAINT_NAMEKeyword_0_13());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_14, null);
	    }

    |		lv_keywordText_0_15=	'DEFAULT' 
    {
        newLeafNode(lv_keywordText_0_15, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextDEFAULTKeyword_0_14());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_15, null);
	    }

    |		lv_keywordText_0_16=	'DELETE' 
    {
        newLeafNode(lv_keywordText_0_16, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextDELETEKeyword_0_15());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_16, null);
	    }

    |		lv_keywordText_0_17=	'DESC' 
    {
        newLeafNode(lv_keywordText_0_17, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextDESCKeyword_0_16());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_17, null);
	    }

    |		lv_keywordText_0_18=	'DISTINCT' 
    {
        newLeafNode(lv_keywordText_0_18, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextDISTINCTKeyword_0_17());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_18, null);
	    }

    |		lv_keywordText_0_19=	'ELSE' 
    {
        newLeafNode(lv_keywordText_0_19, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextELSEKeyword_0_18());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_19, null);
	    }

    |		lv_keywordText_0_20=	'EMPTY' 
    {
        newLeafNode(lv_keywordText_0_20, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextEMPTYKeyword_0_19());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_20, null);
	    }

    |		lv_keywordText_0_21=	'END' 
    {
        newLeafNode(lv_keywordText_0_21, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextENDKeyword_0_20());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_21, null);
	    }

    |		lv_keywordText_0_22=	'ENUM' 
    {
        newLeafNode(lv_keywordText_0_22, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextENUMKeyword_0_21());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_22, null);
	    }

    |		lv_keywordText_0_23=	'ESCAPE' 
    {
        newLeafNode(lv_keywordText_0_23, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextESCAPEKeyword_0_22());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_23, null);
	    }

    |		lv_keywordText_0_24=	'EXISTS' 
    {
        newLeafNode(lv_keywordText_0_24, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextEXISTSKeyword_0_23());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_24, null);
	    }

    |		lv_keywordText_0_25=	'FALSE' 
    {
        newLeafNode(lv_keywordText_0_25, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextFALSEKeyword_0_24());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_25, null);
	    }

    |		lv_keywordText_0_26=	'FOR' 
    {
        newLeafNode(lv_keywordText_0_26, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextFORKeyword_0_25());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_26, null);
	    }

    |		lv_keywordText_0_27=	'FROM' 
    {
        newLeafNode(lv_keywordText_0_27, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextFROMKeyword_0_26());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_27, null);
	    }

    |		lv_keywordText_0_28=	'FUNCTION' 
    {
        newLeafNode(lv_keywordText_0_28, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextFUNCTIONKeyword_0_27());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_28, null);
	    }

    |		lv_keywordText_0_29=	'GROUP' 
    {
        newLeafNode(lv_keywordText_0_29, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextGROUPKeyword_0_28());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_29, null);
	    }

    |		lv_keywordText_0_30=	'GROUP_CONCAT' 
    {
        newLeafNode(lv_keywordText_0_30, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextGROUP_CONCATKeyword_0_29());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_30, null);
	    }

    |		lv_keywordText_0_31=	'HAVING' 
    {
        newLeafNode(lv_keywordText_0_31, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextHAVINGKeyword_0_30());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_31, null);
	    }

    |		lv_keywordText_0_32=	'IF' 
    {
        newLeafNode(lv_keywordText_0_32, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextIFKeyword_0_31());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_32, null);
	    }

    |		lv_keywordText_0_33=	'IFNULL' 
    {
        newLeafNode(lv_keywordText_0_33, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextIFNULLKeyword_0_32());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_33, null);
	    }

    |		lv_keywordText_0_34=	'IK' 
    {
        newLeafNode(lv_keywordText_0_34, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextIKKeyword_0_33());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_34, null);
	    }

    |		lv_keywordText_0_35=	'IMPORT' 
    {
        newLeafNode(lv_keywordText_0_35, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextIMPORTKeyword_0_34());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_35, null);
	    }

    |		lv_keywordText_0_36=	'IN' 
    {
        newLeafNode(lv_keywordText_0_36, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextINKeyword_0_35());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_36, null);
	    }

    |		lv_keywordText_0_37=	'IS' 
    {
        newLeafNode(lv_keywordText_0_37, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextISKeyword_0_36());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_37, null);
	    }

    |		lv_keywordText_0_38=	'JOIN' 
    {
        newLeafNode(lv_keywordText_0_38, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextJOINKeyword_0_37());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_38, null);
	    }

    |		lv_keywordText_0_39=	'LEFT' 
    {
        newLeafNode(lv_keywordText_0_39, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextLEFTKeyword_0_38());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_39, null);
	    }

    |		lv_keywordText_0_40=	'LENGTHBITS' 
    {
        newLeafNode(lv_keywordText_0_40, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextLENGTHBITSKeyword_0_39());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_40, null);
	    }

    |		lv_keywordText_0_41=	'LIKE' 
    {
        newLeafNode(lv_keywordText_0_41, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextLIKEKeyword_0_40());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_41, null);
	    }

    |		lv_keywordText_0_42=	'MAXLENGTH' 
    {
        newLeafNode(lv_keywordText_0_42, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextMAXLENGTHKeyword_0_41());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_42, null);
	    }

    |		lv_keywordText_0_43=	'NEXT' 
    {
        newLeafNode(lv_keywordText_0_43, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextNEXTKeyword_0_42());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_43, null);
	    }

    |		lv_keywordText_0_44=	'NO_ACTION' 
    {
        newLeafNode(lv_keywordText_0_44, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextNO_ACTIONKeyword_0_43());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_44, null);
	    }

    |		lv_keywordText_0_45=	'NOT' 
    {
        newLeafNode(lv_keywordText_0_45, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextNOTKeyword_0_44());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_45, null);
	    }

    |		lv_keywordText_0_46=	'NOW' 
    {
        newLeafNode(lv_keywordText_0_46, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextNOWKeyword_0_45());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_46, null);
	    }

    |		lv_keywordText_0_47=	'NULL' 
    {
        newLeafNode(lv_keywordText_0_47, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextNULLKeyword_0_46());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_47, null);
	    }

    |		lv_keywordText_0_48=	'NULLABLE' 
    {
        newLeafNode(lv_keywordText_0_48, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextNULLABLEKeyword_0_47());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_48, null);
	    }

    |		lv_keywordText_0_49=	'ON' 
    {
        newLeafNode(lv_keywordText_0_49, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextONKeyword_0_48());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_49, null);
	    }

    |		lv_keywordText_0_50=	'OPTIONAL' 
    {
        newLeafNode(lv_keywordText_0_50, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextOPTIONALKeyword_0_49());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_50, null);
	    }

    |		lv_keywordText_0_51=	'OR' 
    {
        newLeafNode(lv_keywordText_0_51, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextORKeyword_0_50());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_51, null);
	    }

    |		lv_keywordText_0_52=	'ORDER' 
    {
        newLeafNode(lv_keywordText_0_52, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextORDERKeyword_0_51());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_52, null);
	    }

    |		lv_keywordText_0_53=	'PACKAGE' 
    {
        newLeafNode(lv_keywordText_0_53, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextPACKAGEKeyword_0_52());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_53, null);
	    }

    |		lv_keywordText_0_54=	'PK' 
    {
        newLeafNode(lv_keywordText_0_54, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextPKKeyword_0_53());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_54, null);
	    }

    |		lv_keywordText_0_55=	'PRECISION' 
    {
        newLeafNode(lv_keywordText_0_55, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextPRECISIONKeyword_0_54());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_55, null);
	    }

    |		lv_keywordText_0_56=	'QUERY' 
    {
        newLeafNode(lv_keywordText_0_56, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextQUERYKeyword_0_55());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_56, null);
	    }

    |		lv_keywordText_0_57=	'REGEXP' 
    {
        newLeafNode(lv_keywordText_0_57, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextREGEXPKeyword_0_56());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_57, null);
	    }

    |		lv_keywordText_0_58=	'RESTRICT' 
    {
        newLeafNode(lv_keywordText_0_58, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextRESTRICTKeyword_0_57());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_58, null);
	    }

    |		lv_keywordText_0_59=	'ROW' 
    {
        newLeafNode(lv_keywordText_0_59, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextROWKeyword_0_58());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_59, null);
	    }

    |		lv_keywordText_0_60=	'SELECT' 
    {
        newLeafNode(lv_keywordText_0_60, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSELECTKeyword_0_59());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_60, null);
	    }

    |		lv_keywordText_0_61=	'SEPARATOR' 
    {
        newLeafNode(lv_keywordText_0_61, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSEPARATORKeyword_0_60());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_61, null);
	    }

    |		lv_keywordText_0_62=	'SERIAL' 
    {
        newLeafNode(lv_keywordText_0_62, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSERIALKeyword_0_61());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_62, null);
	    }

    |		lv_keywordText_0_63=	'SET' 
    {
        newLeafNode(lv_keywordText_0_63, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSETKeyword_0_62());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_63, null);
	    }

    |		lv_keywordText_0_64=	'SET_DEFAULT' 
    {
        newLeafNode(lv_keywordText_0_64, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSET_DEFAULTKeyword_0_63());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_64, null);
	    }

    |		lv_keywordText_0_65=	'SET_NULL' 
    {
        newLeafNode(lv_keywordText_0_65, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSET_NULLKeyword_0_64());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_65, null);
	    }

    |		lv_keywordText_0_66=	'SQL' 
    {
        newLeafNode(lv_keywordText_0_66, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSQLKeyword_0_65());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_66, null);
	    }

    |		lv_keywordText_0_67=	'STATIC' 
    {
        newLeafNode(lv_keywordText_0_67, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextSTATICKeyword_0_66());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_67, null);
	    }

    |		lv_keywordText_0_68=	'TABLE' 
    {
        newLeafNode(lv_keywordText_0_68, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextTABLEKeyword_0_67());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_68, null);
	    }

    |		lv_keywordText_0_69=	'THEN' 
    {
        newLeafNode(lv_keywordText_0_69, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextTHENKeyword_0_68());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_69, null);
	    }

    |		lv_keywordText_0_70=	'TIMESTAMP' 
    {
        newLeafNode(lv_keywordText_0_70, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextTIMESTAMPKeyword_0_69());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_70, null);
	    }

    |		lv_keywordText_0_71=	'TITLE' 
    {
        newLeafNode(lv_keywordText_0_71, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextTITLEKeyword_0_70());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_71, null);
	    }

    |		lv_keywordText_0_72=	'TRUE' 
    {
        newLeafNode(lv_keywordText_0_72, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextTRUEKeyword_0_71());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_72, null);
	    }

    |		lv_keywordText_0_73=	'UK' 
    {
        newLeafNode(lv_keywordText_0_73, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextUKKeyword_0_72());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_73, null);
	    }

    |		lv_keywordText_0_74=	'UNSIGNED' 
    {
        newLeafNode(lv_keywordText_0_74, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextUNSIGNEDKeyword_0_73());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_74, null);
	    }

    |		lv_keywordText_0_75=	'UPDATE' 
    {
        newLeafNode(lv_keywordText_0_75, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextUPDATEKeyword_0_74());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_75, null);
	    }

    |		lv_keywordText_0_76=	'VALUETYPE' 
    {
        newLeafNode(lv_keywordText_0_76, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextVALUETYPEKeyword_0_75());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_76, null);
	    }

    |		lv_keywordText_0_77=	'WHEN' 
    {
        newLeafNode(lv_keywordText_0_77, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextWHENKeyword_0_76());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_77, null);
	    }

    |		lv_keywordText_0_78=	'WHERE' 
    {
        newLeafNode(lv_keywordText_0_78, grammarAccess.getSqmlSqlKeywordAccess().getKeywordTextWHEREKeyword_0_77());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlKeywordRule());
	        }
       		setWithLastConsumed($current, "keywordText", lv_keywordText_0_78, null);
	    }

)

)
)
;





// Entry rule entryRuleSqmlSqlId
entryRuleSqmlSqlId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlIdRule()); }
	 iv_ruleSqmlSqlId=ruleSqmlSqlId 
	 { $current=$iv_ruleSqmlSqlId.current; } 
	 EOF 
;

// Rule SqmlSqlId
ruleSqmlSqlId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getSqmlSqlIdAccess().getIdentifierIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)
;





// Entry rule entryRuleSqmlSqlSymbol
entryRuleSqmlSqlSymbol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlSymbolRule()); }
	 iv_ruleSqmlSqlSymbol=ruleSqmlSqlSymbol 
	 { $current=$iv_ruleSqmlSqlSymbol.current; } 
	 EOF 
;

// Rule SqmlSqlSymbol
ruleSqmlSqlSymbol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_symbolText_0_1=	'+' 
    {
        newLeafNode(lv_symbolText_0_1, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextPlusSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_1, null);
	    }

    |		lv_symbolText_0_2=	'-' 
    {
        newLeafNode(lv_symbolText_0_2, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextHyphenMinusKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_2, null);
	    }

    |		lv_symbolText_0_3=	'*' 
    {
        newLeafNode(lv_symbolText_0_3, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextAsteriskKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_3, null);
	    }

    |		lv_symbolText_0_4=	'/' 
    {
        newLeafNode(lv_symbolText_0_4, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextSolidusKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_4, null);
	    }

    |		lv_symbolText_0_5=	'%' 
    {
        newLeafNode(lv_symbolText_0_5, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextPercentSignKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_5, null);
	    }

    |		lv_symbolText_0_6=	'|' 
    {
        newLeafNode(lv_symbolText_0_6, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextVerticalLineKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_6, null);
	    }

    |		lv_symbolText_0_7=	'&' 
    {
        newLeafNode(lv_symbolText_0_7, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextAmpersandKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_7, null);
	    }

    |		lv_symbolText_0_8=	'^' 
    {
        newLeafNode(lv_symbolText_0_8, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextCircumflexAccentKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_8, null);
	    }

    |		lv_symbolText_0_9=	'~' 
    {
        newLeafNode(lv_symbolText_0_9, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextTildeKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_9, null);
	    }

    |		lv_symbolText_0_10=	'(' 
    {
        newLeafNode(lv_symbolText_0_10, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextLeftParenthesisKeyword_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_10, null);
	    }

    |		lv_symbolText_0_11=	')' 
    {
        newLeafNode(lv_symbolText_0_11, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextRightParenthesisKeyword_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_11, null);
	    }

    |		lv_symbolText_0_12=	'.' 
    {
        newLeafNode(lv_symbolText_0_12, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextFullStopKeyword_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_12, null);
	    }

    |		lv_symbolText_0_13=	',' 
    {
        newLeafNode(lv_symbolText_0_13, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextCommaKeyword_0_12());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_13, null);
	    }

    |		lv_symbolText_0_14=	'=' 
    {
        newLeafNode(lv_symbolText_0_14, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextEqualsSignKeyword_0_13());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_14, null);
	    }

    |		lv_symbolText_0_15=	'<>' 
    {
        newLeafNode(lv_symbolText_0_15, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextLessThanSignGreaterThanSignKeyword_0_14());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_15, null);
	    }

    |		lv_symbolText_0_16=	'!=' 
    {
        newLeafNode(lv_symbolText_0_16, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextExclamationMarkEqualsSignKeyword_0_15());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_16, null);
	    }

    |		lv_symbolText_0_17=	'<' 
    {
        newLeafNode(lv_symbolText_0_17, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextLessThanSignKeyword_0_16());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_17, null);
	    }

    |		lv_symbolText_0_18=	'<=' 
    {
        newLeafNode(lv_symbolText_0_18, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextLessThanSignEqualsSignKeyword_0_17());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_18, null);
	    }

    |		lv_symbolText_0_19=	'>' 
    {
        newLeafNode(lv_symbolText_0_19, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextGreaterThanSignKeyword_0_18());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_19, null);
	    }

    |		lv_symbolText_0_20=	'>=' 
    {
        newLeafNode(lv_symbolText_0_20, grammarAccess.getSqmlSqlSymbolAccess().getSymbolTextGreaterThanSignEqualsSignKeyword_0_19());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlSymbolRule());
	        }
       		setWithLastConsumed($current, "symbolText", lv_symbolText_0_20, null);
	    }

)

)
)
;





// Entry rule entryRuleSqmlSqlStringLiteral
entryRuleSqmlSqlStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlStringLiteralRule()); }
	 iv_ruleSqmlSqlStringLiteral=ruleSqmlSqlStringLiteral 
	 { $current=$iv_ruleSqmlSqlStringLiteral.current; } 
	 EOF 
;

// Rule SqmlSqlStringLiteral
ruleSqmlSqlStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_string_0_0=RULE_STRING
		{
			newLeafNode(lv_string_0_0, grammarAccess.getSqmlSqlStringLiteralAccess().getStringSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_0_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)
;





// Entry rule entryRuleSqmlSqlNumberLiteral
entryRuleSqmlSqlNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSqlNumberLiteralRule()); }
	 iv_ruleSqmlSqlNumberLiteral=ruleSqmlSqlNumberLiteral 
	 { $current=$iv_ruleSqmlSqlNumberLiteral.current; } 
	 EOF 
;

// Rule SqmlSqlNumberLiteral
ruleSqmlSqlNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_integer_0_0=RULE_INT
		{
			newLeafNode(lv_integer_0_0, grammarAccess.getSqmlSqlNumberLiteralAccess().getIntegerINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlNumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"integer",
        		lv_integer_0_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)
    |(
(
		lv_decimal_1_0=RULE_DECIMAL
		{
			newLeafNode(lv_decimal_1_0, grammarAccess.getSqmlSqlNumberLiteralAccess().getDecimalDECIMALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSqlNumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"decimal",
        		lv_decimal_1_0, 
        		"com.softicar.sqml.Sqml.DECIMAL");
	    }

)
))
;





// Entry rule entryRuleSqmlSelect
entryRuleSqmlSelect returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectRule()); }
	 iv_ruleSqmlSelect=ruleSqmlSelect 
	 { $current=$iv_ruleSqmlSelect.current; } 
	 EOF 
;

// Rule SqmlSelect
ruleSqmlSelect returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectAccess().getPartsSqmlSelectPartParserRuleCall_0()); 
	    }
		lv_parts_0_0=ruleSqmlSelectPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_0_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectPart");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSqmlSelectPart
entryRuleSqmlSelectPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectPartRule()); }
	 iv_ruleSqmlSelectPart=ruleSqmlSelectPart 
	 { $current=$iv_ruleSqmlSelectPart.current; } 
	 EOF 
;

// Rule SqmlSelectPart
ruleSqmlSelectPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlSelectIfParserRuleCall_0()); 
    }
    this_SqmlSelectIf_0=ruleSqmlSelectIf
    { 
        $current = $this_SqmlSelectIf_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlSelectClauseParserRuleCall_1()); 
    }
    this_SqmlSelectClause_1=ruleSqmlSelectClause
    { 
        $current = $this_SqmlSelectClause_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlFromClauseParserRuleCall_2()); 
    }
    this_SqmlFromClause_2=ruleSqmlFromClause
    { 
        $current = $this_SqmlFromClause_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlJoinClauseParserRuleCall_3()); 
    }
    this_SqmlJoinClause_3=ruleSqmlJoinClause
    { 
        $current = $this_SqmlJoinClause_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlWhereClauseParserRuleCall_4()); 
    }
    this_SqmlWhereClause_4=ruleSqmlWhereClause
    { 
        $current = $this_SqmlWhereClause_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlGroupByClauseParserRuleCall_5()); 
    }
    this_SqmlGroupByClause_5=ruleSqmlGroupByClause
    { 
        $current = $this_SqmlGroupByClause_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlHavingClauseParserRuleCall_6()); 
    }
    this_SqmlHavingClause_6=ruleSqmlHavingClause
    { 
        $current = $this_SqmlHavingClause_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlSelectPartAccess().getSqmlOrderByClauseParserRuleCall_7()); 
    }
    this_SqmlOrderByClause_7=ruleSqmlOrderByClause
    { 
        $current = $this_SqmlOrderByClause_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlSelectIf
entryRuleSqmlSelectIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectIfRule()); }
	 iv_ruleSqmlSelectIf=ruleSqmlSelectIf 
	 { $current=$iv_ruleSqmlSelectIf.current; } 
	 EOF 
;

// Rule SqmlSelectIf
ruleSqmlSelectIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlSelectIfAccess().getNumberSignKeyword_0());
    }
	otherlv_1='IF' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlSelectIfAccess().getIFKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectIfAccess().getConditionSqmlStaticExpressionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleSqmlStaticExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectIfRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlSelectIfAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectIfAccess().getPartsSqmlSelectPartParserRuleCall_4_0()); 
	    }
		lv_parts_4_0=ruleSqmlSelectPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectIfRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_4_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlSelectIfAccess().getRightCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectIfAccess().getElseIfsSqmlSelectElseIfParserRuleCall_6_0()); 
	    }
		lv_elseIfs_6_0=ruleSqmlSelectElseIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectIfRule());
	        }
       		add(
       			$current, 
       			"elseIfs",
        		lv_elseIfs_6_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectElseIf");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectIfAccess().getElseSqmlSelectElseParserRuleCall_7_0()); 
	    }
		lv_else_7_0=ruleSqmlSelectElse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectIfRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectElse");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSqmlSelectElseIf
entryRuleSqmlSelectElseIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectElseIfRule()); }
	 iv_ruleSqmlSelectElseIf=ruleSqmlSelectElseIf 
	 { $current=$iv_ruleSqmlSelectElseIf.current; } 
	 EOF 
;

// Rule SqmlSelectElseIf
ruleSqmlSelectElseIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ELSE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlSelectElseIfAccess().getELSEKeyword_0());
    }
	otherlv_1='IF' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlSelectElseIfAccess().getIFKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectElseIfAccess().getConditionSqmlStaticExpressionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleSqmlStaticExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectElseIfRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlSelectElseIfAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectElseIfAccess().getPartsSqmlSelectPartParserRuleCall_4_0()); 
	    }
		lv_parts_4_0=ruleSqmlSelectPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectElseIfRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_4_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlSelectElseIfAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSqmlSelectElse
entryRuleSqmlSelectElse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectElseRule()); }
	 iv_ruleSqmlSelectElse=ruleSqmlSelectElse 
	 { $current=$iv_ruleSqmlSelectElse.current; } 
	 EOF 
;

// Rule SqmlSelectElse
ruleSqmlSelectElse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlSelectElseAccess().getSqmlSelectElseAction_0(),
            $current);
    }
)	otherlv_1='ELSE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlSelectElseAccess().getELSEKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlSelectElseAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectElseAccess().getPartsSqmlSelectPartParserRuleCall_3_0()); 
	    }
		lv_parts_3_0=ruleSqmlSelectPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectElseRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_3_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSqmlSelectElseAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSqmlSelectClause
entryRuleSqmlSelectClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectClauseRule()); }
	 iv_ruleSqmlSelectClause=ruleSqmlSelectClause 
	 { $current=$iv_ruleSqmlSelectClause.current; } 
	 EOF 
;

// Rule SqmlSelectClause
ruleSqmlSelectClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SELECT' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlSelectClauseAccess().getSELECTKeyword_0());
    }
(
(
		lv_distinct_1_0=	'DISTINCT' 
    {
        newLeafNode(lv_distinct_1_0, grammarAccess.getSqmlSelectClauseAccess().getDistinctDISTINCTKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSelectClauseRule());
	        }
       		setWithLastConsumed($current, "distinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectClauseAccess().getColumnsSqmlSelectColumnParserRuleCall_2_0()); 
	    }
		lv_columns_2_0=ruleSqmlSelectColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectClauseRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_2_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlSelectClauseAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectClauseAccess().getColumnsSqmlSelectColumnParserRuleCall_3_1_0()); 
	    }
		lv_columns_4_0=ruleSqmlSelectColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectClauseRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_4_0, 
        		"com.softicar.sqml.Sqml.SqmlSelectColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlSelectColumn
entryRuleSqmlSelectColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSelectColumnRule()); }
	 iv_ruleSqmlSelectColumn=ruleSqmlSelectColumn 
	 { $current=$iv_ruleSqmlSelectColumn.current; } 
	 EOF 
;

// Rule SqmlSelectColumn
ruleSqmlSelectColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSelectColumnAccess().getExpressionSqmlExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSelectColumnRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='AS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlSelectColumnAccess().getASKeyword_1_0());
    }
(
(
		lv_alias_2_0=RULE_ID
		{
			newLeafNode(lv_alias_2_0, grammarAccess.getSqmlSelectColumnAccess().getAliasIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSelectColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))?(	otherlv_3='TITLE' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlSelectColumnAccess().getTITLEKeyword_2_0());
    }
(
(
		lv_title_4_0=RULE_STRING
		{
			newLeafNode(lv_title_4_0, grammarAccess.getSqmlSelectColumnAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSelectColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?)
;





// Entry rule entryRuleSqmlFromClause
entryRuleSqmlFromClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFromClauseRule()); }
	 iv_ruleSqmlFromClause=ruleSqmlFromClause 
	 { $current=$iv_ruleSqmlFromClause.current; } 
	 EOF 
;

// Rule SqmlFromClause
ruleSqmlFromClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FROM' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlFromClauseAccess().getFROMKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFromClauseAccess().getVariableSqmlTableVariableParserRuleCall_1_0_0()); 
	    }
		lv_variable_1_1=ruleSqmlTableVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFromClauseRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_1_1, 
        		"com.softicar.sqml.Sqml.SqmlTableVariable");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSqmlFromClauseAccess().getVariableSqmlSubSelectVariableParserRuleCall_1_0_1()); 
	    }
		lv_variable_1_2=ruleSqmlSubSelectVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFromClauseRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_1_2, 
        		"com.softicar.sqml.Sqml.SqmlSubSelectVariable");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleSqmlForeignKeyVariable
entryRuleSqmlForeignKeyVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlForeignKeyVariableRule()); }
	 iv_ruleSqmlForeignKeyVariable=ruleSqmlForeignKeyVariable 
	 { $current=$iv_ruleSqmlForeignKeyVariable.current; } 
	 EOF 
;

// Rule SqmlForeignKeyVariable
ruleSqmlForeignKeyVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlForeignKeyVariableRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSqmlForeignKeyVariableAccess().getVariableISqmlVariableCrossReference_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlForeignKeyVariableAccess().getFullStopKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlForeignKeyVariableRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSqmlForeignKeyVariableAccess().getColumnISqmlColumnCrossReference_2_0()); 
	}

)
)(	otherlv_3='AS' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlForeignKeyVariableAccess().getASKeyword_3());
    }
)?(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getSqmlForeignKeyVariableAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlForeignKeyVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleSqmlTableVariable
entryRuleSqmlTableVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlTableVariableRule()); }
	 iv_ruleSqmlTableVariable=ruleSqmlTableVariable 
	 { $current=$iv_ruleSqmlTableVariable.current; } 
	 EOF 
;

// Rule SqmlTableVariable
ruleSqmlTableVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableVariableRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSqmlTableVariableAccess().getTableISqmlTableCrossReference_0_0()); 
	}

)
)(	otherlv_1='AS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlTableVariableAccess().getASKeyword_1());
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSqmlTableVariableAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlTableVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleSqmlSubSelectVariable
entryRuleSqmlSubSelectVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSubSelectVariableRule()); }
	 iv_ruleSqmlSubSelectVariable=ruleSqmlSubSelectVariable 
	 { $current=$iv_ruleSqmlSubSelectVariable.current; } 
	 EOF 
;

// Rule SqmlSubSelectVariable
ruleSqmlSubSelectVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlSubSelectVariableAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSubSelectVariableAccess().getSubSelectSqmlSelectParserRuleCall_1_0()); 
	    }
		lv_subSelect_1_0=ruleSqmlSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSubSelectVariableRule());
	        }
       		set(
       			$current, 
       			"subSelect",
        		lv_subSelect_1_0, 
        		"com.softicar.sqml.Sqml.SqmlSelect");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlSubSelectVariableAccess().getRightParenthesisKeyword_2());
    }
(	otherlv_3='AS' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlSubSelectVariableAccess().getASKeyword_3());
    }
)?(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getSqmlSubSelectVariableAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlSubSelectVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleSqmlJoinClause
entryRuleSqmlJoinClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlJoinClauseRule()); }
	 iv_ruleSqmlJoinClause=ruleSqmlJoinClause 
	 { $current=$iv_ruleSqmlJoinClause.current; } 
	 EOF 
;

// Rule SqmlJoinClause
ruleSqmlJoinClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_leftJoin_0_0=	'LEFT' 
    {
        newLeafNode(lv_leftJoin_0_0, grammarAccess.getSqmlJoinClauseAccess().getLeftJoinLEFTKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlJoinClauseRule());
	        }
       		setWithLastConsumed($current, "leftJoin", true, "LEFT");
	    }

)
)?	otherlv_1='JOIN' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlJoinClauseAccess().getJOINKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlJoinClauseAccess().getVariableSqmlForeignKeyVariableParserRuleCall_2_0_0()); 
	    }
		lv_variable_2_1=ruleSqmlForeignKeyVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlJoinClauseRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_1, 
        		"com.softicar.sqml.Sqml.SqmlForeignKeyVariable");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSqmlJoinClauseAccess().getVariableSqmlTableVariableParserRuleCall_2_0_1()); 
	    }
		lv_variable_2_2=ruleSqmlTableVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlJoinClauseRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_2, 
        		"com.softicar.sqml.Sqml.SqmlTableVariable");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSqmlJoinClauseAccess().getVariableSqmlSubSelectVariableParserRuleCall_2_0_2()); 
	    }
		lv_variable_2_3=ruleSqmlSubSelectVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlJoinClauseRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_3, 
        		"com.softicar.sqml.Sqml.SqmlSubSelectVariable");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(	otherlv_3='ON' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlJoinClauseAccess().getONKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlJoinClauseAccess().getConditionsSqmlExpressionParserRuleCall_3_1_0()); 
	    }
		lv_conditions_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlJoinClauseRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlWhereClause
entryRuleSqmlWhereClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlWhereClauseRule()); }
	 iv_ruleSqmlWhereClause=ruleSqmlWhereClause 
	 { $current=$iv_ruleSqmlWhereClause.current; } 
	 EOF 
;

// Rule SqmlWhereClause
ruleSqmlWhereClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='WHERE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlWhereClauseAccess().getWHEREKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlWhereClauseAccess().getConditionSqmlExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlWhereClauseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlGroupByClause
entryRuleSqmlGroupByClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlGroupByClauseRule()); }
	 iv_ruleSqmlGroupByClause=ruleSqmlGroupByClause 
	 { $current=$iv_ruleSqmlGroupByClause.current; } 
	 EOF 
;

// Rule SqmlGroupByClause
ruleSqmlGroupByClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GROUP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlGroupByClauseAccess().getGROUPKeyword_0());
    }
	otherlv_1='BY' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlGroupByClauseAccess().getBYKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlGroupByClauseAccess().getExpressionsSqmlExpressionParserRuleCall_2_0()); 
	    }
		lv_expressions_2_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlGroupByClauseRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlGroupByClauseAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlGroupByClauseAccess().getExpressionsSqmlExpressionParserRuleCall_3_1_0()); 
	    }
		lv_expressions_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlGroupByClauseRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlHavingClause
entryRuleSqmlHavingClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlHavingClauseRule()); }
	 iv_ruleSqmlHavingClause=ruleSqmlHavingClause 
	 { $current=$iv_ruleSqmlHavingClause.current; } 
	 EOF 
;

// Rule SqmlHavingClause
ruleSqmlHavingClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='HAVING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlHavingClauseAccess().getHAVINGKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlHavingClauseAccess().getConditionSqmlExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlHavingClauseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlOrderByClause
entryRuleSqmlOrderByClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlOrderByClauseRule()); }
	 iv_ruleSqmlOrderByClause=ruleSqmlOrderByClause 
	 { $current=$iv_ruleSqmlOrderByClause.current; } 
	 EOF 
;

// Rule SqmlOrderByClause
ruleSqmlOrderByClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ORDER' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlOrderByClauseAccess().getORDERKeyword_0());
    }
	otherlv_1='BY' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlOrderByClauseAccess().getBYKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlOrderByClauseAccess().getExpressionsSqmlOrderByExpressionParserRuleCall_2_0()); 
	    }
		lv_expressions_2_0=ruleSqmlOrderByExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlOrderByClauseRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"com.softicar.sqml.Sqml.SqmlOrderByExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlOrderByClauseAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlOrderByClauseAccess().getExpressionsSqmlOrderByExpressionParserRuleCall_3_1_0()); 
	    }
		lv_expressions_4_0=ruleSqmlOrderByExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlOrderByClauseRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"com.softicar.sqml.Sqml.SqmlOrderByExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlOrderByExpression
entryRuleSqmlOrderByExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlOrderByExpressionRule()); }
	 iv_ruleSqmlOrderByExpression=ruleSqmlOrderByExpression 
	 { $current=$iv_ruleSqmlOrderByExpression.current; } 
	 EOF 
;

// Rule SqmlOrderByExpression
ruleSqmlOrderByExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlOrderByExpressionAccess().getExpressionSqmlExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlOrderByExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='ASC' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlOrderByExpressionAccess().getASCKeyword_1_0());
    }

    |(
(
		lv_descending_2_0=	'DESC' 
    {
        newLeafNode(lv_descending_2_0, grammarAccess.getSqmlOrderByExpressionAccess().getDescendingDESCKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlOrderByExpressionRule());
	        }
       		setWithLastConsumed($current, "descending", true, "DESC");
	    }

)
))?)
;





// Entry rule entryRuleSqmlExpression
entryRuleSqmlExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlExpressionRule()); }
	 iv_ruleSqmlExpression=ruleSqmlExpression 
	 { $current=$iv_ruleSqmlExpression.current; } 
	 EOF 
;

// Rule SqmlExpression
ruleSqmlExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSqmlExpressionAccess().getSqmlOrParserRuleCall()); 
    }
    this_SqmlOr_0=ruleSqmlOr
    { 
        $current = $this_SqmlOr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSqmlOr
entryRuleSqmlOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlOrRule()); }
	 iv_ruleSqmlOr=ruleSqmlOr 
	 { $current=$iv_ruleSqmlOr.current; } 
	 EOF 
;

// Rule SqmlOr
ruleSqmlOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlOrAccess().getSqmlAndParserRuleCall_0()); 
    }
    this_SqmlAnd_0=ruleSqmlAnd
    { 
        $current = $this_SqmlAnd_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlOrAccess().getSqmlOrLeftAction_1_0(),
            $current);
    }
)	otherlv_2='OR' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlOrAccess().getORKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlOrAccess().getRightSqmlAndParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSqmlAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.softicar.sqml.Sqml.SqmlAnd");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlAnd
entryRuleSqmlAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlAndRule()); }
	 iv_ruleSqmlAnd=ruleSqmlAnd 
	 { $current=$iv_ruleSqmlAnd.current; } 
	 EOF 
;

// Rule SqmlAnd
ruleSqmlAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlAndAccess().getSqmlConditionParserRuleCall_0()); 
    }
    this_SqmlCondition_0=ruleSqmlCondition
    { 
        $current = $this_SqmlCondition_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlAndAccess().getSqmlAndLeftAction_1_0(),
            $current);
    }
)	otherlv_2='AND' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlAndAccess().getANDKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlAndAccess().getRightSqmlConditionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSqmlCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.softicar.sqml.Sqml.SqmlCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlCondition
entryRuleSqmlCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlConditionRule()); }
	 iv_ruleSqmlCondition=ruleSqmlCondition 
	 { $current=$iv_ruleSqmlCondition.current; } 
	 EOF 
;

// Rule SqmlCondition
ruleSqmlCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlConditionAccess().getSqmlNotAction_0_0(),
            $current);
    }
)	otherlv_1='NOT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlConditionAccess().getNOTKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getConditionSqmlConditionParserRuleCall_0_2_0()); 
	    }
		lv_condition_2_0=ruleSqmlCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"com.softicar.sqml.Sqml.SqmlCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlConditionAccess().getSqmlExistsAction_1_0(),
            $current);
    }
)	otherlv_4='EXISTS' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSqmlConditionAccess().getEXISTSKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getSubSelectSqmlSubSelectParserRuleCall_1_2_0()); 
	    }
		lv_subSelect_5_0=ruleSqmlSubSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"subSelect",
        		lv_subSelect_5_0, 
        		"com.softicar.sqml.Sqml.SqmlSubSelect");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getSqmlConditionAccess().getSqmlOperandParserRuleCall_2_0()); 
    }
    this_SqmlOperand_6=ruleSqmlOperand
    { 
        $current = $this_SqmlOperand_6.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlConditionAccess().getSqmlComparisonLeftAction_2_1_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getFunctionSqmlFunctionCrossReference_2_1_0_1_0()); 
	    }
		ruleSqmlComparisonOperator		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRightSqmlOperandParserRuleCall_2_1_0_2_0()); 
	    }
		lv_right_9_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_9_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlConditionAccess().getSqmlLikeLeftAction_2_1_1_0(),
            $current);
    }
)(
(
		lv_not_11_0=	'NOT' 
    {
        newLeafNode(lv_not_11_0, grammarAccess.getSqmlConditionAccess().getNotNOTKeyword_2_1_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlConditionRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?	otherlv_12='LIKE' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSqmlConditionAccess().getLIKEKeyword_2_1_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRightSqmlOperandParserRuleCall_2_1_1_3_0()); 
	    }
		lv_right_13_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_13_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14='ESCAPE' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSqmlConditionAccess().getESCAPEKeyword_2_1_1_4_0());
    }
(
(
		lv_escape_15_0=RULE_STRING
		{
			newLeafNode(lv_escape_15_0, grammarAccess.getSqmlConditionAccess().getEscapeSTRINGTerminalRuleCall_2_1_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"escape",
        		lv_escape_15_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlConditionAccess().getSqmlIsNullOperandAction_2_1_2_0(),
            $current);
    }
)	otherlv_17='IS' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSqmlConditionAccess().getISKeyword_2_1_2_1());
    }
(
(
		lv_not_18_0=	'NOT' 
    {
        newLeafNode(lv_not_18_0, grammarAccess.getSqmlConditionAccess().getNotNOTKeyword_2_1_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlConditionRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?	otherlv_19='NULL' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSqmlConditionAccess().getNULLKeyword_2_1_2_3());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlConditionAccess().getSqmlBetweenOperandAction_2_1_3_0(),
            $current);
    }
)	otherlv_21='BETWEEN' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSqmlConditionAccess().getBETWEENKeyword_2_1_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getLeftSqmlOperandParserRuleCall_2_1_3_2_0()); 
	    }
		lv_left_22_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_22_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23='AND' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getSqmlConditionAccess().getANDKeyword_2_1_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRightSqmlOperandParserRuleCall_2_1_3_4_0()); 
	    }
		lv_right_24_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_24_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlConditionAccess().getSqmlInLeftAction_2_1_4_0(),
            $current);
    }
)(
(
		lv_not_26_0=	'NOT' 
    {
        newLeafNode(lv_not_26_0, grammarAccess.getSqmlConditionAccess().getNotNOTKeyword_2_1_4_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlConditionRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?	otherlv_27='IN' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSqmlConditionAccess().getINKeyword_2_1_4_2());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRightSqmlStaticVariableReferenceParserRuleCall_2_1_4_3_0_0()); 
	    }
		lv_right_28_1=ruleSqmlStaticVariableReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_28_1, 
        		"com.softicar.sqml.Sqml.SqmlStaticVariableReference");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRightSqmlSubSelectParserRuleCall_2_1_4_3_0_1()); 
	    }
		lv_right_28_2=ruleSqmlSubSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_28_2, 
        		"com.softicar.sqml.Sqml.SqmlSubSelect");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRightSqmlRowConstructorParserRuleCall_2_1_4_3_0_2()); 
	    }
		lv_right_28_3=ruleSqmlRowConstructor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_28_3, 
        		"com.softicar.sqml.Sqml.SqmlRowConstructor");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlConditionAccess().getSqmlRegexpOperandAction_2_1_5_0(),
            $current);
    }
)(
(
		lv_not_30_0=	'NOT' 
    {
        newLeafNode(lv_not_30_0, grammarAccess.getSqmlConditionAccess().getNotNOTKeyword_2_1_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlConditionRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?	otherlv_31='REGEXP' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getSqmlConditionAccess().getREGEXPKeyword_2_1_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlConditionAccess().getRegexpSqmlOperandParserRuleCall_2_1_5_3_0()); 
	    }
		lv_regexp_32_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlConditionRule());
	        }
       		set(
       			$current, 
       			"regexp",
        		lv_regexp_32_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
)))?))
;





// Entry rule entryRuleSqmlOperand
entryRuleSqmlOperand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlOperandRule()); }
	 iv_ruleSqmlOperand=ruleSqmlOperand 
	 { $current=$iv_ruleSqmlOperand.current; } 
	 EOF 
;

// Rule SqmlOperand
ruleSqmlOperand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSqmlOperandAccess().getSqmlAdditionParserRuleCall()); 
    }
    this_SqmlAddition_0=ruleSqmlAddition
    { 
        $current = $this_SqmlAddition_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSqmlAddition
entryRuleSqmlAddition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlAdditionRule()); }
	 iv_ruleSqmlAddition=ruleSqmlAddition 
	 { $current=$iv_ruleSqmlAddition.current; } 
	 EOF 
;

// Rule SqmlAddition
ruleSqmlAddition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlAdditionAccess().getSqmlMultiplicationParserRuleCall_0()); 
    }
    this_SqmlMultiplication_0=ruleSqmlMultiplication
    { 
        $current = $this_SqmlMultiplication_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlAdditionAccess().getSqmlAdditionLeftAction_1_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlAdditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSqmlAdditionAccess().getFunctionSqmlFunctionCrossReference_1_1_0()); 
	    }
		ruleSqmlAdditionOperator		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlAdditionAccess().getRightSqmlMultiplicationParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSqmlMultiplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlAdditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.softicar.sqml.Sqml.SqmlMultiplication");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlMultiplication
entryRuleSqmlMultiplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlMultiplicationRule()); }
	 iv_ruleSqmlMultiplication=ruleSqmlMultiplication 
	 { $current=$iv_ruleSqmlMultiplication.current; } 
	 EOF 
;

// Rule SqmlMultiplication
ruleSqmlMultiplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlMultiplicationAccess().getSqmlPrimayParserRuleCall_0()); 
    }
    this_SqmlPrimay_0=ruleSqmlPrimay
    { 
        $current = $this_SqmlPrimay_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlMultiplicationAccess().getSqmlMultiplicationLeftAction_1_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlMultiplicationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSqmlMultiplicationAccess().getFunctionSqmlFunctionCrossReference_1_1_0()); 
	    }
		ruleSqmlMultiplicationOperator		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlMultiplicationAccess().getRightSqmlPrimayParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSqmlPrimay		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlMultiplicationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.softicar.sqml.Sqml.SqmlPrimay");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlPrimay
entryRuleSqmlPrimay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlPrimayRule()); }
	 iv_ruleSqmlPrimay=ruleSqmlPrimay 
	 { $current=$iv_ruleSqmlPrimay.current; } 
	 EOF 
;

// Rule SqmlPrimay
ruleSqmlPrimay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlRowConstructorParserRuleCall_0()); 
    }
    this_SqmlRowConstructor_0=ruleSqmlRowConstructor
    { 
        $current = $this_SqmlRowConstructor_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlNegationParserRuleCall_1()); 
    }
    this_SqmlNegation_1=ruleSqmlNegation
    { 
        $current = $this_SqmlNegation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlValueReferenceParserRuleCall_2()); 
    }
    this_SqmlValueReference_2=ruleSqmlValueReference
    { 
        $current = $this_SqmlValueReference_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlFunctionCallParserRuleCall_3()); 
    }
    this_SqmlFunctionCall_3=ruleSqmlFunctionCall
    { 
        $current = $this_SqmlFunctionCall_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlGroupConcatParserRuleCall_4()); 
    }
    this_SqmlGroupConcat_4=ruleSqmlGroupConcat
    { 
        $current = $this_SqmlGroupConcat_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlCaseParserRuleCall_5()); 
    }
    this_SqmlCase_5=ruleSqmlCase
    { 
        $current = $this_SqmlCase_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlIfParserRuleCall_6()); 
    }
    this_SqmlIf_6=ruleSqmlIf
    { 
        $current = $this_SqmlIf_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlIfNullParserRuleCall_7()); 
    }
    this_SqmlIfNull_7=ruleSqmlIfNull
    { 
        $current = $this_SqmlIfNull_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlStaticIfParserRuleCall_8()); 
    }
    this_SqmlStaticIf_8=ruleSqmlStaticIf
    { 
        $current = $this_SqmlStaticIf_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlStaticVariableReferenceParserRuleCall_9()); 
    }
    this_SqmlStaticVariableReference_9=ruleSqmlStaticVariableReference
    { 
        $current = $this_SqmlStaticVariableReference_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlPrimayAccess().getSqmlLiteralParserRuleCall_10()); 
    }
    this_SqmlLiteral_10=ruleSqmlLiteral
    { 
        $current = $this_SqmlLiteral_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlSubSelect
entryRuleSqmlSubSelect returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlSubSelectRule()); }
	 iv_ruleSqmlSubSelect=ruleSqmlSubSelect 
	 { $current=$iv_ruleSqmlSubSelect.current; } 
	 EOF 
;

// Rule SqmlSubSelect
ruleSqmlSubSelect returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlSubSelectAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlSubSelectAccess().getSelectSqmlSelectParserRuleCall_1_0()); 
	    }
		lv_select_1_0=ruleSqmlSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlSubSelectRule());
	        }
       		set(
       			$current, 
       			"select",
        		lv_select_1_0, 
        		"com.softicar.sqml.Sqml.SqmlSelect");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlSubSelectAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleSqmlStaticVariableReference
entryRuleSqmlStaticVariableReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticVariableReferenceRule()); }
	 iv_ruleSqmlStaticVariableReference=ruleSqmlStaticVariableReference 
	 { $current=$iv_ruleSqmlStaticVariableReference.current; } 
	 EOF 
;

// Rule SqmlStaticVariableReference
ruleSqmlStaticVariableReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nextIteration_0_0=	'NEXT' 
    {
        newLeafNode(lv_nextIteration_0_0, grammarAccess.getSqmlStaticVariableReferenceAccess().getNextIterationNEXTKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlStaticVariableReferenceRule());
	        }
       		setWithLastConsumed($current, "nextIteration", true, "NEXT");
	    }

)
)?	otherlv_1='$' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlStaticVariableReferenceAccess().getDollarSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlStaticVariableReferenceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSqmlStaticVariableReferenceAccess().getVariableISqmlStaticVariableCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleSqmlRowConstructor
entryRuleSqmlRowConstructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlRowConstructorRule()); }
	 iv_ruleSqmlRowConstructor=ruleSqmlRowConstructor 
	 { $current=$iv_ruleSqmlRowConstructor.current; } 
	 EOF 
;

// Rule SqmlRowConstructor
ruleSqmlRowConstructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_explicit_0_0=	'ROW' 
    {
        newLeafNode(lv_explicit_0_0, grammarAccess.getSqmlRowConstructorAccess().getExplicitROWKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlRowConstructorRule());
	        }
       		setWithLastConsumed($current, "explicit", true, "ROW");
	    }

)
)?	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlRowConstructorAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlRowConstructorAccess().getExpressionsSqmlExpressionParserRuleCall_2_0()); 
	    }
		lv_expressions_2_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlRowConstructorRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlRowConstructorAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlRowConstructorAccess().getExpressionsSqmlExpressionParserRuleCall_3_1_0()); 
	    }
		lv_expressions_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlRowConstructorRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlRowConstructorAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSqmlNegation
entryRuleSqmlNegation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlNegationRule()); }
	 iv_ruleSqmlNegation=ruleSqmlNegation 
	 { $current=$iv_ruleSqmlNegation.current; } 
	 EOF 
;

// Rule SqmlNegation
ruleSqmlNegation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='-' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlNegationAccess().getHyphenMinusKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlNegationAccess().getExpressionSqmlPrimayParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleSqmlPrimay		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlNegationRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"com.softicar.sqml.Sqml.SqmlPrimay");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlFunctionCall
entryRuleSqmlFunctionCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFunctionCallRule()); }
	 iv_ruleSqmlFunctionCall=ruleSqmlFunctionCall 
	 { $current=$iv_ruleSqmlFunctionCall.current; } 
	 EOF 
;

// Rule SqmlFunctionCall
ruleSqmlFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlFunctionCallRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSqmlFunctionCallAccess().getFunctionSqmlFunctionCrossReference_0_0()); 
	}

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlFunctionCallAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionCallAccess().getArgumentsSqmlOperandParserRuleCall_2_0_0()); 
	    }
		lv_arguments_2_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlFunctionCallAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlFunctionCallAccess().getArgumentsSqmlOperandParserRuleCall_2_1_1_0()); 
	    }
		lv_arguments_4_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlFunctionCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlFunctionCallAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleSqmlGroupConcat
entryRuleSqmlGroupConcat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlGroupConcatRule()); }
	 iv_ruleSqmlGroupConcat=ruleSqmlGroupConcat 
	 { $current=$iv_ruleSqmlGroupConcat.current; } 
	 EOF 
;

// Rule SqmlGroupConcat
ruleSqmlGroupConcat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GROUP_CONCAT' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlGroupConcatAccess().getGROUP_CONCATKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlGroupConcatAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_distinct_2_0=	'DISTINCT' 
    {
        newLeafNode(lv_distinct_2_0, grammarAccess.getSqmlGroupConcatAccess().getDistinctDISTINCTKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlGroupConcatRule());
	        }
       		setWithLastConsumed($current, "distinct", true, "DISTINCT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlGroupConcatAccess().getExpressionsSqmlOperandParserRuleCall_3_0()); 
	    }
		lv_expressions_3_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlGroupConcatRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSqmlGroupConcatAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlGroupConcatAccess().getExpressionsSqmlOperandParserRuleCall_4_1_0()); 
	    }
		lv_expressions_5_0=ruleSqmlOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlGroupConcatRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_5_0, 
        		"com.softicar.sqml.Sqml.SqmlOperand");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6='ORDER' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSqmlGroupConcatAccess().getORDERKeyword_5_0());
    }
	otherlv_7='BY' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSqmlGroupConcatAccess().getBYKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlGroupConcatAccess().getOrderByExpressionsSqmlOrderByExpressionParserRuleCall_5_2_0()); 
	    }
		lv_orderByExpressions_8_0=ruleSqmlOrderByExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlGroupConcatRule());
	        }
       		add(
       			$current, 
       			"orderByExpressions",
        		lv_orderByExpressions_8_0, 
        		"com.softicar.sqml.Sqml.SqmlOrderByExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSqmlGroupConcatAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlGroupConcatAccess().getOrderByExpressionsSqmlOrderByExpressionParserRuleCall_5_3_1_0()); 
	    }
		lv_orderByExpressions_10_0=ruleSqmlOrderByExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlGroupConcatRule());
	        }
       		add(
       			$current, 
       			"orderByExpressions",
        		lv_orderByExpressions_10_0, 
        		"com.softicar.sqml.Sqml.SqmlOrderByExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_11='SEPARATOR' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSqmlGroupConcatAccess().getSEPARATORKeyword_6_0());
    }
(
(
		lv_separator_12_0=RULE_STRING
		{
			newLeafNode(lv_separator_12_0, grammarAccess.getSqmlGroupConcatAccess().getSeparatorSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlGroupConcatRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"separator",
        		lv_separator_12_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSqmlGroupConcatAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleSqmlCase
entryRuleSqmlCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlCaseRule()); }
	 iv_ruleSqmlCase=ruleSqmlCase 
	 { $current=$iv_ruleSqmlCase.current; } 
	 EOF 
;

// Rule SqmlCase
ruleSqmlCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CASE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlCaseAccess().getCASEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlCaseAccess().getOperandSqmlExpressionParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlCaseRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlCaseAccess().getWhensSqmlCaseWhenParserRuleCall_2_0()); 
	    }
		lv_whens_2_0=ruleSqmlCaseWhen		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlCaseRule());
	        }
       		add(
       			$current, 
       			"whens",
        		lv_whens_2_0, 
        		"com.softicar.sqml.Sqml.SqmlCaseWhen");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_3='ELSE' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlCaseAccess().getELSEKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlCaseAccess().getElseExpressionSqmlExpressionParserRuleCall_3_1_0()); 
	    }
		lv_elseExpression_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlCaseRule());
	        }
       		set(
       			$current, 
       			"elseExpression",
        		lv_elseExpression_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='END' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlCaseAccess().getENDKeyword_4());
    }
)
;





// Entry rule entryRuleSqmlCaseWhen
entryRuleSqmlCaseWhen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlCaseWhenRule()); }
	 iv_ruleSqmlCaseWhen=ruleSqmlCaseWhen 
	 { $current=$iv_ruleSqmlCaseWhen.current; } 
	 EOF 
;

// Rule SqmlCaseWhen
ruleSqmlCaseWhen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='WHEN' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlCaseWhenAccess().getWHENKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlCaseWhenAccess().getWhenExpressionSqmlExpressionParserRuleCall_1_0()); 
	    }
		lv_whenExpression_1_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlCaseWhenRule());
	        }
       		set(
       			$current, 
       			"whenExpression",
        		lv_whenExpression_1_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='THEN' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlCaseWhenAccess().getTHENKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlCaseWhenAccess().getThenExpressionSqmlExpressionParserRuleCall_3_0()); 
	    }
		lv_thenExpression_3_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlCaseWhenRule());
	        }
       		set(
       			$current, 
       			"thenExpression",
        		lv_thenExpression_3_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlIf
entryRuleSqmlIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlIfRule()); }
	 iv_ruleSqmlIf=ruleSqmlIf 
	 { $current=$iv_ruleSqmlIf.current; } 
	 EOF 
;

// Rule SqmlIf
ruleSqmlIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IF' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlIfAccess().getIFKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlIfAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlIfAccess().getConditionSqmlExpressionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlIfRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlIfAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlIfAccess().getThenExpressionSqmlExpressionParserRuleCall_4_0()); 
	    }
		lv_thenExpression_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlIfRule());
	        }
       		set(
       			$current, 
       			"thenExpression",
        		lv_thenExpression_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlIfAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlIfAccess().getElseExpressionSqmlExpressionParserRuleCall_6_0()); 
	    }
		lv_elseExpression_6_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlIfRule());
	        }
       		set(
       			$current, 
       			"elseExpression",
        		lv_elseExpression_6_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSqmlIfAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleSqmlIfNull
entryRuleSqmlIfNull returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlIfNullRule()); }
	 iv_ruleSqmlIfNull=ruleSqmlIfNull 
	 { $current=$iv_ruleSqmlIfNull.current; } 
	 EOF 
;

// Rule SqmlIfNull
ruleSqmlIfNull returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='IFNULL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlIfNullAccess().getIFNULLKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlIfNullAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlIfNullAccess().getTestExpressionSqmlExpressionParserRuleCall_2_0()); 
	    }
		lv_testExpression_2_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlIfNullRule());
	        }
       		set(
       			$current, 
       			"testExpression",
        		lv_testExpression_2_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlIfNullAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlIfNullAccess().getThenExpressionSqmlExpressionParserRuleCall_4_0()); 
	    }
		lv_thenExpression_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlIfNullRule());
	        }
       		set(
       			$current, 
       			"thenExpression",
        		lv_thenExpression_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlIfNullAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleSqmlStaticIf
entryRuleSqmlStaticIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticIfRule()); }
	 iv_ruleSqmlStaticIf=ruleSqmlStaticIf 
	 { $current=$iv_ruleSqmlStaticIf.current; } 
	 EOF 
;

// Rule SqmlStaticIf
ruleSqmlStaticIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='STATIC' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlStaticIfAccess().getSTATICKeyword_0());
    }
	otherlv_1='IF' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlStaticIfAccess().getIFKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIfAccess().getConditionsSqmlStaticExpressionParserRuleCall_2_0()); 
	    }
		lv_conditions_2_0=ruleSqmlStaticExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIfRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_2_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlStaticIfAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIfAccess().getExpressionsSqmlExpressionParserRuleCall_4_0()); 
	    }
		lv_expressions_4_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIfRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSqmlStaticIfAccess().getRightCurlyBracketKeyword_5());
    }
((((	'ELSE' 
	'IF' 
))=>(	otherlv_6='ELSE' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSqmlStaticIfAccess().getELSEKeyword_6_0_0_0());
    }
	otherlv_7='IF' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSqmlStaticIfAccess().getIFKeyword_6_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIfAccess().getConditionsSqmlStaticExpressionParserRuleCall_6_1_0()); 
	    }
		lv_conditions_8_0=ruleSqmlStaticExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIfRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_8_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSqmlStaticIfAccess().getLeftCurlyBracketKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIfAccess().getExpressionsSqmlExpressionParserRuleCall_6_3_0()); 
	    }
		lv_expressions_10_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIfRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_10_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSqmlStaticIfAccess().getRightCurlyBracketKeyword_6_4());
    }
)*(	otherlv_12='ELSE' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSqmlStaticIfAccess().getELSEKeyword_7_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSqmlStaticIfAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIfAccess().getElseExpressionSqmlExpressionParserRuleCall_7_2_0()); 
	    }
		lv_elseExpression_14_0=ruleSqmlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIfRule());
	        }
       		set(
       			$current, 
       			"elseExpression",
        		lv_elseExpression_14_0, 
        		"com.softicar.sqml.Sqml.SqmlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSqmlStaticIfAccess().getRightCurlyBracketKeyword_7_3());
    }
)?)
;





// Entry rule entryRuleSqmlStaticExpression
entryRuleSqmlStaticExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticExpressionRule()); }
	 iv_ruleSqmlStaticExpression=ruleSqmlStaticExpression 
	 { $current=$iv_ruleSqmlStaticExpression.current; } 
	 EOF 
;

// Rule SqmlStaticExpression
ruleSqmlStaticExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSqmlStaticExpressionAccess().getSqmlStaticOrParserRuleCall()); 
    }
    this_SqmlStaticOr_0=ruleSqmlStaticOr
    { 
        $current = $this_SqmlStaticOr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSqmlStaticOr
entryRuleSqmlStaticOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticOrRule()); }
	 iv_ruleSqmlStaticOr=ruleSqmlStaticOr 
	 { $current=$iv_ruleSqmlStaticOr.current; } 
	 EOF 
;

// Rule SqmlStaticOr
ruleSqmlStaticOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlStaticOrAccess().getSqmlStaticAndParserRuleCall_0()); 
    }
    this_SqmlStaticAnd_0=ruleSqmlStaticAnd
    { 
        $current = $this_SqmlStaticAnd_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlStaticOrAccess().getSqmlStaticOrLeftAction_1_0(),
            $current);
    }
)	otherlv_2='OR' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlStaticOrAccess().getORKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticOrAccess().getRightSqmlStaticAndParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSqmlStaticAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticAnd");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlStaticAnd
entryRuleSqmlStaticAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticAndRule()); }
	 iv_ruleSqmlStaticAnd=ruleSqmlStaticAnd 
	 { $current=$iv_ruleSqmlStaticAnd.current; } 
	 EOF 
;

// Rule SqmlStaticAnd
ruleSqmlStaticAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlStaticAndAccess().getSqmlStaticAtomParserRuleCall_0()); 
    }
    this_SqmlStaticAtom_0=ruleSqmlStaticAtom
    { 
        $current = $this_SqmlStaticAtom_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlStaticAndAccess().getSqmlStaticAndLeftAction_1_0(),
            $current);
    }
)	otherlv_2='AND' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlStaticAndAccess().getANDKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticAndAccess().getRightSqmlStaticAtomParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSqmlStaticAtom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticAtom");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSqmlStaticAtom
entryRuleSqmlStaticAtom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticAtomRule()); }
	 iv_ruleSqmlStaticAtom=ruleSqmlStaticAtom 
	 { $current=$iv_ruleSqmlStaticAtom.current; } 
	 EOF 
;

// Rule SqmlStaticAtom
ruleSqmlStaticAtom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlStaticAtomAccess().getSqmlStaticParenthesesParserRuleCall_0()); 
    }
    this_SqmlStaticParentheses_0=ruleSqmlStaticParentheses
    { 
        $current = $this_SqmlStaticParentheses_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlStaticAtomAccess().getSqmlStaticIsEmptyParserRuleCall_1()); 
    }
    this_SqmlStaticIsEmpty_1=ruleSqmlStaticIsEmpty
    { 
        $current = $this_SqmlStaticIsEmpty_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlStaticAtomAccess().getSqmlStaticIsNullParserRuleCall_2()); 
    }
    this_SqmlStaticIsNull_2=ruleSqmlStaticIsNull
    { 
        $current = $this_SqmlStaticIsNull_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlStaticAtomAccess().getSqmlStaticIsTrueParserRuleCall_3()); 
    }
    this_SqmlStaticIsTrue_3=ruleSqmlStaticIsTrue
    { 
        $current = $this_SqmlStaticIsTrue_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlStaticIsEmpty
entryRuleSqmlStaticIsEmpty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticIsEmptyRule()); }
	 iv_ruleSqmlStaticIsEmpty=ruleSqmlStaticIsEmpty 
	 { $current=$iv_ruleSqmlStaticIsEmpty.current; } 
	 EOF 
;

// Rule SqmlStaticIsEmpty
ruleSqmlStaticIsEmpty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIsEmptyAccess().getParameterReferenceSqmlStaticVariableReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterReference_0_0=ruleSqmlStaticVariableReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIsEmptyRule());
	        }
       		set(
       			$current, 
       			"parameterReference",
        		lv_parameterReference_0_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticVariableReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='IS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlStaticIsEmptyAccess().getISKeyword_1());
    }
(
(
		lv_not_2_0=	'NOT' 
    {
        newLeafNode(lv_not_2_0, grammarAccess.getSqmlStaticIsEmptyAccess().getNotNOTKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlStaticIsEmptyRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?	otherlv_3='EMPTY' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlStaticIsEmptyAccess().getEMPTYKeyword_3());
    }
)
;





// Entry rule entryRuleSqmlStaticIsNull
entryRuleSqmlStaticIsNull returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticIsNullRule()); }
	 iv_ruleSqmlStaticIsNull=ruleSqmlStaticIsNull 
	 { $current=$iv_ruleSqmlStaticIsNull.current; } 
	 EOF 
;

// Rule SqmlStaticIsNull
ruleSqmlStaticIsNull returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIsNullAccess().getParameterReferenceSqmlStaticVariableReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterReference_0_0=ruleSqmlStaticVariableReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIsNullRule());
	        }
       		set(
       			$current, 
       			"parameterReference",
        		lv_parameterReference_0_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticVariableReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='IS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSqmlStaticIsNullAccess().getISKeyword_1());
    }
(
(
		lv_not_2_0=	'NOT' 
    {
        newLeafNode(lv_not_2_0, grammarAccess.getSqmlStaticIsNullAccess().getNotNOTKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlStaticIsNullRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?	otherlv_3='NULL' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSqmlStaticIsNullAccess().getNULLKeyword_3());
    }
)
;





// Entry rule entryRuleSqmlStaticIsTrue
entryRuleSqmlStaticIsTrue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticIsTrueRule()); }
	 iv_ruleSqmlStaticIsTrue=ruleSqmlStaticIsTrue 
	 { $current=$iv_ruleSqmlStaticIsTrue.current; } 
	 EOF 
;

// Rule SqmlStaticIsTrue
ruleSqmlStaticIsTrue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_not_0_0=	'NOT' 
    {
        newLeafNode(lv_not_0_0, grammarAccess.getSqmlStaticIsTrueAccess().getNotNOTKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlStaticIsTrueRule());
	        }
       		setWithLastConsumed($current, "not", true, "NOT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticIsTrueAccess().getParameterReferenceSqmlStaticVariableReferenceParserRuleCall_1_0()); 
	    }
		lv_parameterReference_1_0=ruleSqmlStaticVariableReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticIsTrueRule());
	        }
       		set(
       			$current, 
       			"parameterReference",
        		lv_parameterReference_1_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticVariableReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSqmlStaticParentheses
entryRuleSqmlStaticParentheses returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStaticParenthesesRule()); }
	 iv_ruleSqmlStaticParentheses=ruleSqmlStaticParentheses 
	 { $current=$iv_ruleSqmlStaticParentheses.current; } 
	 EOF 
;

// Rule SqmlStaticParentheses
ruleSqmlStaticParentheses returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSqmlStaticParenthesesAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlStaticParenthesesAccess().getExpressionSqmlStaticExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleSqmlStaticExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlStaticParenthesesRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"com.softicar.sqml.Sqml.SqmlStaticExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlStaticParenthesesAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleSqmlValueReference
entryRuleSqmlValueReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlValueReferenceRule()); }
	 iv_ruleSqmlValueReference=ruleSqmlValueReference 
	 { $current=$iv_ruleSqmlValueReference.current; } 
	 EOF 
;

// Rule SqmlValueReference
ruleSqmlValueReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nextIteration_0_0=	'NEXT' 
    {
        newLeafNode(lv_nextIteration_0_0, grammarAccess.getSqmlValueReferenceAccess().getNextIterationNEXTKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlValueReferenceRule());
	        }
       		setWithLastConsumed($current, "nextIteration", true, "NEXT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSqmlValueReferenceAccess().getPathSqmlPathParserRuleCall_1_0()); 
	    }
		lv_path_1_0=ruleSqmlPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqmlValueReferenceRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_1_0, 
        		"com.softicar.sqml.Sqml.SqmlPath");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_dotStar_2_0=	'.*' 
    {
        newLeafNode(lv_dotStar_2_0, grammarAccess.getSqmlValueReferenceAccess().getDotStarFullStopAsteriskKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlValueReferenceRule());
	        }
       		setWithLastConsumed($current, "dotStar", true, ".*");
	    }

)
)?)
;





// Entry rule entryRuleSqmlPath
entryRuleSqmlPath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlPathRule()); }
	 iv_ruleSqmlPath=ruleSqmlPath 
	 { $current=$iv_ruleSqmlPath.current; } 
	 EOF 
;

// Rule SqmlPath
ruleSqmlPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlPathRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSqmlPathAccess().getTargetISqmlModelElementCrossReference_0_0()); 
	}

)
)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSqmlPathAccess().getSqmlPathParentAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlPathAccess().getFullStopKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlPathRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSqmlPathAccess().getTargetISqmlModelElementCrossReference_1_2_0()); 
	}

)
))*)
;





// Entry rule entryRuleSqmlLiteral
entryRuleSqmlLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlLiteralRule()); }
	 iv_ruleSqmlLiteral=ruleSqmlLiteral 
	 { $current=$iv_ruleSqmlLiteral.current; } 
	 EOF 
;

// Rule SqmlLiteral
ruleSqmlLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlIntegerLiteralParserRuleCall_0()); 
    }
    this_SqmlIntegerLiteral_0=ruleSqmlIntegerLiteral
    { 
        $current = $this_SqmlIntegerLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlLongLiteralParserRuleCall_1()); 
    }
    this_SqmlLongLiteral_1=ruleSqmlLongLiteral
    { 
        $current = $this_SqmlLongLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlFloatLiteralParserRuleCall_2()); 
    }
    this_SqmlFloatLiteral_2=ruleSqmlFloatLiteral
    { 
        $current = $this_SqmlFloatLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlDoubleLiteralParserRuleCall_3()); 
    }
    this_SqmlDoubleLiteral_3=ruleSqmlDoubleLiteral
    { 
        $current = $this_SqmlDoubleLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlDecimalLiteralParserRuleCall_4()); 
    }
    this_SqmlDecimalLiteral_4=ruleSqmlDecimalLiteral
    { 
        $current = $this_SqmlDecimalLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlStringLiteralParserRuleCall_5()); 
    }
    this_SqmlStringLiteral_5=ruleSqmlStringLiteral
    { 
        $current = $this_SqmlStringLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlLiteralAccess().getSqmlBooleanLiteralParserRuleCall_6()); 
    }
    this_SqmlBooleanLiteral_6=ruleSqmlBooleanLiteral
    { 
        $current = $this_SqmlBooleanLiteral_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSqmlIntegerLiteral
entryRuleSqmlIntegerLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlIntegerLiteralRule()); }
	 iv_ruleSqmlIntegerLiteral=ruleSqmlIntegerLiteral 
	 { $current=$iv_ruleSqmlIntegerLiteral.current; } 
	 EOF 
;

// Rule SqmlIntegerLiteral
ruleSqmlIntegerLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSqmlIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlIntegerLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)
;





// Entry rule entryRuleSqmlLongLiteral
entryRuleSqmlLongLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlLongLiteralRule()); }
	 iv_ruleSqmlLongLiteral=ruleSqmlLongLiteral 
	 { $current=$iv_ruleSqmlLongLiteral.current; } 
	 EOF 
;

// Rule SqmlLongLiteral
ruleSqmlLongLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_LONG
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSqmlLongLiteralAccess().getValueLONGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlLongLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"com.softicar.sqml.Sqml.LONG");
	    }

)
)
;





// Entry rule entryRuleSqmlFloatLiteral
entryRuleSqmlFloatLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFloatLiteralRule()); }
	 iv_ruleSqmlFloatLiteral=ruleSqmlFloatLiteral 
	 { $current=$iv_ruleSqmlFloatLiteral.current; } 
	 EOF 
;

// Rule SqmlFloatLiteral
ruleSqmlFloatLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_FLOAT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSqmlFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlFloatLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"com.softicar.sqml.Sqml.FLOAT");
	    }

)
)
;





// Entry rule entryRuleSqmlDoubleLiteral
entryRuleSqmlDoubleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlDoubleLiteralRule()); }
	 iv_ruleSqmlDoubleLiteral=ruleSqmlDoubleLiteral 
	 { $current=$iv_ruleSqmlDoubleLiteral.current; } 
	 EOF 
;

// Rule SqmlDoubleLiteral
ruleSqmlDoubleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_DOUBLE
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSqmlDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlDoubleLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"com.softicar.sqml.Sqml.DOUBLE");
	    }

)
)
;





// Entry rule entryRuleSqmlDecimalLiteral
entryRuleSqmlDecimalLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlDecimalLiteralRule()); }
	 iv_ruleSqmlDecimalLiteral=ruleSqmlDecimalLiteral 
	 { $current=$iv_ruleSqmlDecimalLiteral.current; } 
	 EOF 
;

// Rule SqmlDecimalLiteral
ruleSqmlDecimalLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_DECIMAL
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSqmlDecimalLiteralAccess().getValueDECIMALTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlDecimalLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"com.softicar.sqml.Sqml.DECIMAL");
	    }

)
)
;





// Entry rule entryRuleSqmlStringLiteral
entryRuleSqmlStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlStringLiteralRule()); }
	 iv_ruleSqmlStringLiteral=ruleSqmlStringLiteral 
	 { $current=$iv_ruleSqmlStringLiteral.current; } 
	 EOF 
;

// Rule SqmlStringLiteral
ruleSqmlStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getSqmlStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)
;





// Entry rule entryRuleSqmlBooleanLiteral
entryRuleSqmlBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlBooleanLiteralRule()); }
	 iv_ruleSqmlBooleanLiteral=ruleSqmlBooleanLiteral 
	 { $current=$iv_ruleSqmlBooleanLiteral.current; } 
	 EOF 
;

// Rule SqmlBooleanLiteral
ruleSqmlBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlBooleanLiteralAccess().getSqmlBooleanLiteralAction_0_0(),
            $current);
    }
)(
(
		lv_true_1_0=	'TRUE' 
    {
        newLeafNode(lv_true_1_0, grammarAccess.getSqmlBooleanLiteralAccess().getTrueTRUEKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqmlBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "true", true, "TRUE");
	    }

)
))
    |(	otherlv_2='FALSE' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSqmlBooleanLiteralAccess().getFALSEKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getSqmlBooleanLiteralAccess().getSqmlBooleanLiteralAction_1_1(),
            $current);
    }
)))
;





// Entry rule entryRuleSqmlFunctionName
entryRuleSqmlFunctionName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlFunctionNameRule()); } 
	 iv_ruleSqmlFunctionName=ruleSqmlFunctionName 
	 { $current=$iv_ruleSqmlFunctionName.current.getText(); }  
	 EOF 
;

// Rule SqmlFunctionName
ruleSqmlFunctionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getSqmlFunctionNameAccess().getIDTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlFunctionNameAccess().getSqmlComparisonOperatorParserRuleCall_1()); 
    }
    this_SqmlComparisonOperator_1=ruleSqmlComparisonOperator    {
		$current.merge(this_SqmlComparisonOperator_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlFunctionNameAccess().getSqmlAdditionOperatorParserRuleCall_2()); 
    }
    this_SqmlAdditionOperator_2=ruleSqmlAdditionOperator    {
		$current.merge(this_SqmlAdditionOperator_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSqmlFunctionNameAccess().getSqmlMultiplicationOperatorParserRuleCall_3()); 
    }
    this_SqmlMultiplicationOperator_3=ruleSqmlMultiplicationOperator    {
		$current.merge(this_SqmlMultiplicationOperator_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleSqmlComparisonOperator
entryRuleSqmlComparisonOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlComparisonOperatorRule()); } 
	 iv_ruleSqmlComparisonOperator=ruleSqmlComparisonOperator 
	 { $current=$iv_ruleSqmlComparisonOperator.current.getText(); }  
	 EOF 
;

// Rule SqmlComparisonOperator
ruleSqmlComparisonOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlComparisonOperatorAccess().getEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlComparisonOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlComparisonOperatorAccess().getLessThanSignKeyword_2()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlComparisonOperatorAccess().getLessThanSignEqualsSignKeyword_3()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlComparisonOperatorAccess().getGreaterThanSignKeyword_4()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlComparisonOperatorAccess().getGreaterThanSignEqualsSignKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleSqmlAdditionOperator
entryRuleSqmlAdditionOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlAdditionOperatorRule()); } 
	 iv_ruleSqmlAdditionOperator=ruleSqmlAdditionOperator 
	 { $current=$iv_ruleSqmlAdditionOperator.current.getText(); }  
	 EOF 
;

// Rule SqmlAdditionOperator
ruleSqmlAdditionOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlAdditionOperatorAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlAdditionOperatorAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleSqmlMultiplicationOperator
entryRuleSqmlMultiplicationOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqmlMultiplicationOperatorRule()); } 
	 iv_ruleSqmlMultiplicationOperator=ruleSqmlMultiplicationOperator 
	 { $current=$iv_ruleSqmlMultiplicationOperator.current.getText(); }  
	 EOF 
;

// Rule SqmlMultiplicationOperator
ruleSqmlMultiplicationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlMultiplicationOperatorAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlMultiplicationOperatorAccess().getSolidusKeyword_1()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSqmlMultiplicationOperatorAccess().getPercentSignKeyword_2()); 
    }
)
    ;







// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule SqmlForeignKeyAction
ruleSqmlForeignKeyAction returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='CASCADE' 
	{
        $current = grammarAccess.getSqmlForeignKeyActionAccess().getCASCADEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSqmlForeignKeyActionAccess().getCASCADEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='NO_ACTION' 
	{
        $current = grammarAccess.getSqmlForeignKeyActionAccess().getNO_ACTIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSqmlForeignKeyActionAccess().getNO_ACTIONEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='RESTRICT' 
	{
        $current = grammarAccess.getSqmlForeignKeyActionAccess().getRESTRICTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSqmlForeignKeyActionAccess().getRESTRICTEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='SET_DEFAULT' 
	{
        $current = grammarAccess.getSqmlForeignKeyActionAccess().getSET_DEFAULTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSqmlForeignKeyActionAccess().getSET_DEFAULTEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='SET_NULL' 
	{
        $current = grammarAccess.getSqmlForeignKeyActionAccess().getSET_NULLEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSqmlForeignKeyActionAccess().getSET_NULLEnumLiteralDeclaration_4()); 
    }
));



RULE_LONG : RULE_INT 'L';

RULE_FLOAT : (RULE_INT 'f'|RULE_DECIMAL 'f');

RULE_DOUBLE : (RULE_INT 'd'|RULE_DECIMAL 'd');

RULE_DECIMAL : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


